"use strict";var __awaiter=this&&this.__awaiter||function(e,o,t,n){return new(t||(t=Promise))((function(s,r){function i(e){try{_(n.next(e))}catch(e){r(e)}}function a(e){try{_(n.throw(e))}catch(e){r(e)}}function _(e){var o;e.done?s(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(i,a)}_((n=n.apply(e,o||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HosSdkInfoHandler=void 0;const hos_local_component_loader_1=require("../loader/hos-local-component-loader"),sdkmanager_common_1=require("@ohos/sdkmanager-common"),hos_remote_component_loader_1=require("../loader/hos-remote-component-loader"),hos_license_manager_1=require("../license/hos-license-manager"),hos_task_factory_1=require("../task/hos-task-factory"),hos_version_mapper_1=require("./hos-version-mapper"),path_and_hos_sdk_version_1=require("../dto/path-and-hos-sdk-version"),object_unique_map_1=require("../util/object-unique-map"),os_1=__importDefault(require("os")),hos_sdk_util_1=require("../util/hos-sdk-util"),platform_sdks_1=require("../mapper/platform-sdks"),path_1=__importDefault(require("path")),hos_component_dto_1=require("../dto/hos-component-dto");class HosSdkInfoHandler{constructor(e,o=new sdkmanager_common_1.SimpleProgress){this._sdkSettings=new sdkmanager_common_1.SdkInfoSettings(e),this._progress=o}getLocalSdks(e){const o=hos_version_mapper_1.HosVersionMapper.INSTANCE.transferVersionIntoHosVersion(e);if(void 0===o)return new Map;const t=this._getLocalComponents().filter((e=>e.getHosSdkVersion().equals(o)));return this._mapComponentsByPath(t)}_mapComponentsByPath(e){if(void 0===e||0===e.length)return new Map;const o=new Map;return e.forEach((e=>{("emulator"===e.getPath()||e.getPath().startsWith("system-image"))&&o.set(e.getPath(),e),hos_version_mapper_1.HosVersionMapper.INSTANCE.getHosSdkPath(e.getHosSdkVersion().getPlatformVersion().getVersion())?this._parsingPlatforms(o,e):o.set(e.getPath(),e)})),o}getOrDownload(e,o){const t=this._convert2PathAndHosSdkVersion(e,o),n=new hos_local_component_loader_1.HosLocalComponentLoader(this._sdkSettings.getLocation(),this._progress);return this.doGetOrDownload(t,this._mapComponents(n.load()),(e=>{(0,hos_sdk_util_1.checkSdkCompatibility)(n,"HosSdkInfoHandler execution failed")}))}_parsingPlatforms(e,o){var t;null===(t=platform_sdks_1.PlatformSdks.getSdks(this.getSdkType()))||void 0===t||t.forEach((t=>{var n;const s=new hos_component_dto_1.HosComponentDto;Object.assign(s,o),s.path=t,s.location=path_1.default.join(null!==(n=o.getLocation())&&void 0!==n?n:"",this.getSdkType(),t),e.set(s.getPath(),s)}))}getSdkType(){return"hms"}_convert2PathAndHosSdkVersion(e,o){const t=hos_version_mapper_1.HosVersionMapper.INSTANCE.transferVersionIntoHosVersion(e);if(void 0===t)throw new sdkmanager_common_1.SdkException("Invalid version",new sdkmanager_common_1.ErrorTip("",`Could not found version ${e}`,""));const n=o.map((e=>{var o;return(null===(o=platform_sdks_1.PlatformSdks.getSdks(this.getSdkType()))||void 0===o?void 0:o.includes(e))?hos_version_mapper_1.HosVersionMapper.INSTANCE.getHosSdkPath(t.getPlatformVersion().getVersion()):e}));return Array.from(new Set(n)).map((e=>new path_and_hos_sdk_version_1.PathAndHosSdkVersion(e,t)))}_mapComponents(e){if(void 0===e||0===e.length)return new object_unique_map_1.ObjectUniqueMap;const o=new object_unique_map_1.ObjectUniqueMap;return e.forEach((e=>o.set(new path_and_hos_sdk_version_1.PathAndHosSdkVersion(e.getPath(),e.getHosSdkVersion()),e))),o}doGetOrDownload(e,o,t){return __awaiter(this,void 0,void 0,(function*(){const n=this._filterRequiredSdks(o,e),s=this._findMissingComponents(n,e);if(0===s.length)return Promise.resolve().then((()=>{const e=[];return n.forEach((o=>e.push(o))),this._mapComponentsByPath(e)}));const r=yield this._downloadComponents(s,t);return this._mergeComponents(n,r)}))}_filterRequiredSdks(e,o){const t=new object_unique_map_1.ObjectUniqueMap;for(const n of o){const o=e.get(n);void 0!==o&&t.set(n,o)}return t}_findMissingComponents(e,o){return o.filter((o=>!e.has(o)))}_downloadComponents(e,o){return __awaiter(this,void 0,void 0,(function*(){const t=this._mapComponents(yield this._getRemoteComponents()),n=[],s=[];for(const r of e){const e=t.get(r);e?(null==o||o.call(this,e),n.push(e)):s.push(r)}return yield this._checkLicense(n),yield this._installComponents(n),0!==s.length?this._throwNotFoundException(s):this._mapComponents(n)}))}_checkLicense(e){return __awaiter(this,void 0,void 0,(function*(){const o=yield this._findUnacceptedLicenses(e);if(void 0===o)return Promise.reject(new sdkmanager_common_1.SdkException("",new sdkmanager_common_1.ErrorTip("","Unable to obtain the license.","Check the network and HTTP proxy settings, and then try again.")));if(o.length>=1){const t=o[0],n=e.filter((e=>e.getLicense()===t.id)).map((e=>`${e.getFullName()}`));return Promise.reject(new sdkmanager_common_1.SdkException("",this._getLicenseNotAcceptedMessage(n)))}}))}_installComponents(e){return __awaiter(this,void 0,void 0,(function*(){for(const o of e){this._progress.info(`Installing ${o.getFullName()}...`);try{yield this._createInstallComponentTask(o).execute(this._progress)}catch(e){return e instanceof sdkmanager_common_1.SdkException?Promise.reject(new sdkmanager_common_1.SdkException(`Install ${o.getFullName()} failed`,e.getErrorTip())):Promise.reject(new sdkmanager_common_1.SdkException(`Install ${o.getFullName()} failed`,new sdkmanager_common_1.ErrorTip(null==e?void 0:e.message,null==e?void 0:e.message,"")))}}}))}_throwNotFoundException(e){let o="";for(const t of e){const e=(0,hos_sdk_util_1.decoratePath)(t.getPath()),n=t.getHosSdkVersion().getBaseApi();o+=0!==n?`${os_1.default.EOL}\t\t${e}:${n}`:`${os_1.default.EOL}\t\t${e}`}const t=new sdkmanager_common_1.SdkException("",new sdkmanager_common_1.ErrorTip("",`Unable to find the following components:${o}`,"\n\t\t1.Go to Tools > SDK Manager > SDK > HarmonyOS, download the components, and sync the project. Open SDK Manager\n\t\t2.Alternatively, modify the compileSdkVersion settings in the project-level build-profile.json5 file."));return Promise.reject(t)}_getLocalComponents(){return new hos_local_component_loader_1.HosLocalComponentLoader(this._sdkSettings.getLocation()).load()}_getRemoteComponents(){return new hos_remote_component_loader_1.HosRemoteComponentLoader(this._sdkSettings,this._sdkSettings.getNetClient(),this._progress).load().then((e=>e))}_findUnacceptedLicenses(e){const o=e.map((e=>e.getLicense()));return new hos_license_manager_1.HosLicenseManager(this._sdkSettings,this._sdkSettings.getNetClient()).findUnacceptedLicenses(o,this._progress)}_getLicenseNotAcceptedMessage(e){const o=e.join(",");return new sdkmanager_common_1.ErrorTip("","The SDK license agreement is not accepted.",`\n1. If you are in DevEco Studio, open SDK Manager, go to SDK > HarmonyOS, and re-download the ${o} SDK. Accept the license agreement when prompted.\n2. If you are using a pipeline, re-download the ${o} SDK with a command line tool. Accept the license agreement when prompted.`)}_mergeComponents(e,o){for(const t of e.entries()){const e=t[0],n=t[1];o.has(e)||o.set(e,n)}const t=[];return o.forEach((e=>t.push(e))),this._mapComponentsByPath(t)}_createInstallComponentTask(e){return(0,hos_task_factory_1.createHosInstallTask)(e,this._sdkSettings,this._sdkSettings.getNetClient())}}exports.HosSdkInfoHandler=HosSdkInfoHandler;