"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArktsBaseLogger=exports.LogCore=void 0;const constants_js_1=require("../util/constants.js");class LogCore{constructor(s,t){this._debugLog=[],this._infoLog=[],this._warnLog=[],this._errorLog=[],this._log=[],this._category=s,this._type=t}getDebugLogs(){return this._debugLog}debug(...s){this.logMsg(this._debugLog,this.getLogEvent("debug",s))}getInfoLogs(){return this._infoLog}info(...s){this.logMsg(this._infoLog,this.getLogEvent("info",s))}getWarnLogs(){return this._warnLog}warn(...s){this.logMsg(this._warnLog,this.getLogEvent("warn",s))}getErrorLogs(){return this._errorLog}error(...s){this.logMsg(this._errorLog,this.getLogEvent("error",s))}getLogs(){return this._log}logMsg(s,t){s.push(t),this._log.push(t),ArktsBaseLogger.addLogEvent(t)}getLogEvent(s,t){return{time:new Date,category:this._category,level:s,msg:(e=t,e.map((s=>"object"==typeof s?JSON.stringify(s):s)).join(" ")),type:this._type};var e}}exports.LogCore=LogCore;class ArktsBaseLogger{static setLogCallback(s,t){ArktsBaseLogger.sendLog=s,ArktsBaseLogger.tsWatchCb=t}static addLastLogEvents(s){ArktsBaseLogger.lastLogEvents.push(...s)}static getLastLogEvents(){return ArktsBaseLogger.lastLogEvents}static getPluginLogger(s){return ArktsBaseLogger.getLogger(s,constants_js_1.PLUGIN_LOG_TYPE)}static getLogger(s,t=constants_js_1.NORMAL_LOG_TYPE){return ArktsBaseLogger._logMap.has(s)||ArktsBaseLogger._logMap.set(s,new LogCore(s,t)),ArktsBaseLogger._logMap.get(s)}static getLogMap(){return ArktsBaseLogger._logMap}static addLogEvent(s){if(ArktsBaseLogger.checkTsWatchEnd(s)&&ArktsBaseLogger.tsWatchCb)return ArktsBaseLogger.tsWatchCb();ArktsBaseLogger._logEvents.push(s),"error"===s.level&&(this._logEventsHasError=!0),ArktsBaseLogger.sendLog&&ArktsBaseLogger.sendLog([s])}static getLogEvents(){return ArktsBaseLogger._logEvents}static checkLoggerHaveErrorInfo(){return this._logEventsHasError}static sendLastLogEvents(s){ArktsBaseLogger.sendLog&&ArktsBaseLogger.sendLog(ArktsBaseLogger.lastLogEvents,s)}static clearLogEvents(){for(const s of ArktsBaseLogger._logEvents)"string"!=typeof s.msg||"warn"!==s.level&&"error"!==s.level||ArktsBaseLogger.lastLogEvents.push(s);ArktsBaseLogger._logEvents.length=0,this._logEventsHasError=!1}static checkTsWatchEnd(s){return"string"==typeof s.msg&&"TS Watch End"===s.msg}static reset(){ArktsBaseLogger._logMap.clear(),ArktsBaseLogger.sendLog=void 0,ArktsBaseLogger.tsWatchCb=void 0,ArktsBaseLogger.lastLogEvents=[]}}exports.ArktsBaseLogger=ArktsBaseLogger,ArktsBaseLogger._logMap=new Map,ArktsBaseLogger._logEvents=[],ArktsBaseLogger._logEventsHasError=!1,ArktsBaseLogger.sendLog=void 0,ArktsBaseLogger.tsWatchCb=void 0,ArktsBaseLogger.lastLogEvents=[];