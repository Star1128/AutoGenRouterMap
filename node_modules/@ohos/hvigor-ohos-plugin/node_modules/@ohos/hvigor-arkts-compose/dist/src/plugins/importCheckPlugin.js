"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.importCheckPlugin=void 0;const hvigor_arkts_base_1=require("@ohos/hvigor-arkts-base"),path_1=__importDefault(require("path")),constants_js_1=require("../util/constants.js"),LOGGER=hvigor_arkts_base_1.ArktsBaseLogger.getPluginLogger("ArkTS import check");function importCheckPlugin(){return{name:"importCheckPlugin",resolveId:resolveId,load:load,moduleParsed:moduleParsed}}function resolveId(t,e,o){if(!e||!o.custom["node-resolve"])return;const{resolved:s,oriImportee:r}=o.custom["node-resolve"];if(!s?.id||!r)return;const i=this.getModuleInfo(e);if(!i?.meta)return;if(path_1.default.isAbsolute(r)){const t=i.meta.absoluteImports??[];return t.push(r),void(i.meta.absoluteImports=t)}const a=i?.meta?.belongModulePath;if(a&&(r.startsWith("./")||r.startsWith("../"))&&!s.id.startsWith(a+path_1.default.sep)){const t=i.meta.outsideModuleImports??[];t.push(r),i.meta.outsideModuleImports=t}}function load(t){if(t.includes(constants_js_1.OH_NODE_MODULES)||t.includes(constants_js_1.NODE_MODULES))return;const e=this.getModuleInfo(t);e?.meta&&(e.meta.belongModulePath=getBelongModulePath(t,this.share?.projectConfig?.allModulePaths))}function moduleParsed(t){if(t?.meta?.absoluteImports&&Array.isArray(t.meta.absoluteImports))for(const e of t.meta.absoluteImports){const o=`ERROR File: ${t.id}\n      Cannot import files using absolute paths. Import statement: '${e}'`;logMsg(this.share?.projectConfig?.strictMode?.noExternalImportByPath,o)}if(t?.meta?.outsideModuleImports&&Array.isArray(t.meta.outsideModuleImports))for(const e of t.meta.outsideModuleImports){const o=`ERROR File: ${t.id}\n      Cannot import files outside of the current module using relative paths. Import statement: '${e}'`;logMsg(this.share?.projectConfig?.strictMode?.noExternalImportByPath,o)}}function getBelongModulePath(t,e){if(e)for(const o of e)if(t.startsWith(o+path_1.default.sep))return o}function logMsg(t,e){t?LOGGER.error(e):LOGGER.warn(e)}exports.importCheckPlugin=importCheckPlugin;