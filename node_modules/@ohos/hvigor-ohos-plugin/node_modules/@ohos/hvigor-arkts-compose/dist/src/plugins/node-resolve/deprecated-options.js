"use strict";function handleDeprecatedOptions(e){const o=[];if(e.customResolveOptions){const{customResolveOptions:r}=e;if(r.moduleDirectory&&(e.moduleDirectories=Array.isArray(r.moduleDirectory)?r.moduleDirectory:[r.moduleDirectory],o.push("node-resolve: The `customResolveOptions.moduleDirectory` option has been deprecated. Use `moduleDirectories`, which must be an array.")),r.preserveSymlinks)throw new Error("node-resolve: `customResolveOptions.preserveSymlinks` is no longer an option. We now always use the rollup `preserveSymlinks` option.");["basedir","package","extensions","includeCoreModules","readFile","isFile","isDirectory","realpath","packageFilter","pathFilter","paths","packageIterator"].forEach((e=>{if(r[e])throw new Error(`node-resolve: \`customResolveOptions.${e}\` is no longer an option. If you need this, please open an issue.`)}))}return{warnings:o}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handleDeprecatedOptions;