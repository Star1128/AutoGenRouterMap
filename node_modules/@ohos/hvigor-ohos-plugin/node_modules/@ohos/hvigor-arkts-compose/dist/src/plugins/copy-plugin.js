"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const fs_1=__importDefault(require("fs")),glob_1=require("glob"),path_1=__importDefault(require("path"));function renameTarget(e,t,r){const n=path_1.default.parse(e);return"string"==typeof t?t:t(n.name,n.ext.replace(".",""),r)}async function getCopyTargets(e,t){const r=[];for(const n of e){const{dest:e,rename:s,src:o,...a}=n,u=glob_1.glob.sync(o,{nodir:!0,...t,...a});if(u.length)for(const t of u){const{base:n}=path_1.default.parse(t);r.push({src:t,dest:path_1.default.join(e,s?renameTarget(n,s,t):n),renamed:s})}}return r}function copyPlugin(e={}){const{copyOnce:t=!1,hook:r="buildEnd",targets:n=[],...s}=e;let o=!1;function a(e,t){const r=path_1.default.dirname(e);fs_1.default.existsSync(r)||fs_1.default.mkdirSync(r,{recursive:!0}),fs_1.default.copyFileSync(t,e)}return{name:"copyPlugin",[r]:async()=>{if(t&&o)return;let e=[];Array.isArray(n)&&n.length&&(e=await getCopyTargets(n,s));for(const t of e){const{dest:e,src:r}=t;fs_1.default.existsSync(r)&&a(e,r)}o=!0}}}exports.default=copyPlugin;