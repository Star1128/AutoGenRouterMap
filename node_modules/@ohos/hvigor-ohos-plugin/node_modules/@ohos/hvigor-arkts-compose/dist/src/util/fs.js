"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.transformPath=exports.realpathFS=exports.resolveSymlink=exports.checkFileExistsAndSize=exports.fileExists=exports.disableRealpathCache=exports.enableRealpathCache=exports.clearFileCache=exports.clearRealpathCache=exports.stat=exports.readFile=exports.access=void 0;const fs_1=__importDefault(require("fs")),os_1=__importDefault(require("os")),path_1=__importDefault(require("path")),util_1=require("util");exports.access=(0,util_1.promisify)(fs_1.default.access),exports.readFile=(0,util_1.promisify)(fs_1.default.readFile),exports.stat=(0,util_1.promisify)(fs_1.default.stat);const realpath=(0,util_1.promisify)(fs_1.default.realpath&&"function"==typeof fs_1.default.realpath.native?fs_1.default.realpath.native:fs_1.default.realpath),realpathCache=new Map,fileCache=new Map;let useRealpathCache=!1;function clearRealpathCache(){realpathCache.clear()}function clearFileCache(){fileCache.clear()}function enableRealpathCache(){useRealpathCache=!0}function disableRealpathCache(){useRealpathCache=!1}async function fileExists(e){try{return(await(0,exports.stat)(e)).isFile()}catch{return!1}}async function checkFileExistsAndSize(e){try{let a;return fileCache.has(e)?a=fileCache.get(e):(a=await(0,exports.stat)(e),fileCache.set(e,a)),a&&a.isFile()&&a.size>10485760}catch{return!1}}async function resolveSymlink(e){return await fileExists(e)?realpathFS(e):e}async function realpathFS(e){if(useRealpathCache){if(!realpathCache.has(e)){const a=realpath(e);realpathCache.set(e,a)}return realpathCache.get(e)}return realpath(e)}function transformPath(e){return"Windows_NT"===os_1.default.type()&&process.version<"v16.19.0"?path_1.default.toNamespacedPath(e):e}exports.clearRealpathCache=clearRealpathCache,exports.clearFileCache=clearFileCache,exports.enableRealpathCache=enableRealpathCache,exports.disableRealpathCache=disableRealpathCache,exports.fileExists=fileExists,exports.checkFileExistsAndSize=checkFileExistsAndSize,exports.resolveSymlink=resolveSymlink,exports.realpathFS=realpathFS,exports.transformPath=transformPath;