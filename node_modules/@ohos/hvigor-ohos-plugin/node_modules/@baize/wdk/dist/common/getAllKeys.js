"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllKeysIn = void 0;
var keys_1 = __importDefault(require("../keys"));
var symbols_1 = require("./symbols");
function getAllKeys(object) {
    var result = (0, keys_1.default)(object);
    if (!Array.isArray(object)) {
        result.push.apply(result, __spreadArray([], __read((0, symbols_1.getSymbols)(object)), false));
    }
    return result;
}
function getAllKeysIn(object) {
    var result = [];
    for (var key in object) {
        if (Object.hasOwnProperty.call(object, key)) {
            result.push(key);
        }
    }
    if (!Array.isArray(object)) {
        result.push.apply(result, __spreadArray([], __read((0, symbols_1.getSymbolsIn)(object)), false));
    }
    return result;
}
exports.getAllKeysIn = getAllKeysIn;
exports.default = getAllKeys;
