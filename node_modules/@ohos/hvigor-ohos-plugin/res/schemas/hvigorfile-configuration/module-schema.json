{
  "title": "JSON schema for hvigorfile.ts configuration in module",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "resOptions": {
      "description": "Configurations related to resource compilation",
      "type": "object"
    },
    "externalNativeOptions": {
      "description": "Configurations related to native compilation.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "path",
          "abiFilters",
          "arguments",
          "cppFlags",
          "targets",
          "cFlags"
        ]
      },
      "properties": {
        "path": {
          "description": "Path of the CMakeLists.txt file (relative to the configuration file), for example, ./src/main/cpp/CMakeLists.txt.",
          "type": "string"
        },
        "abiFilters": {
          "description": "Defines the CPU architecture type of the system where the CPP application runs. Multiple CPU architecture types can be included, for example, Arm64-v8a.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "arm64-v8a",
              "armeabi-v7a",
              "x86_64"
            ]
          },
          "minItems": 1
        },
        "arguments": {
          "description": "Specifies cmake compilation parameters, for example, -v -DOHOS_STL=c++_static",
          "type": "string"
        },
        "cppFlags": {
          "description": "Specifies the settings related to CMAKE_CXX_FLAGS.",
          "type": "string"
        },
        "cFlags": {
          "description": "Specifies the settings related to CMAKE_C_FLAGS.",
          "type": "string"
        },
        "targets": {
          "description": "Specifies the library and executable targets from your CMake project that hvigor should build.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sourceOption": {
      "description": "Different tags are used to classify source codes so that different source codes can be processed differently during the build process.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "workers"
        ]
      },
      "properties": {
        "workers": {
          "description": "Specifies the ArkTS/TS/JS source code that uses node.js worker, The source code is processed separately during the build process.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "napiLibFilterOption": {
      "description": "Filter options for library (.so) files",
      "deprecationMessage": "Please use 'nativeLib/filter' instead in API10 or later.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "excludes",
          "pickFirsts",
          "pickLasts",
          "enableOverride"
        ]
      },
      "properties": {
        "excludes": {
          "description": "Set of excluded patterns. Libraries matching any of these patterns will not be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pickFirsts": {
          "description": "Set of patterns where the first occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the first one will be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pickLasts": {
          "description": "Set of patterns where the last occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the last one will be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableOverride": {
          "description": "Enable the override of native library. Libraries with the same path will be allowed. ",
          "type": "boolean"
        }
      }
    },
    "nativeLib": {
      "description": "Native lib options",
      "type": "object",
      "propertyNames": {
        "enum": [
          "debugSymbol",
          "filter",
          "headerPath"
        ]
      },
      "properties": {
        "debugSymbol": {
          "description": "debugSymbol option",
          "type": "object",
          "propertyNames": {
            "enum": [
              "strip",
              "exclude"
            ]
          },
          "properties": {
            "strip": {
              "description": "Specifies whether to strip .so files.",
              "type": "boolean"
            },
            "exclude": {
              "description": "Lists the .so files to be excluded from strip. If strip is set to true, the matched .so files in the list are not stripped. If strip is set to false, only the matched .so files in the list are stripped.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "filter": {
          "description": "Native libs filter option",
          "type": "object",
          "propertyNames": {
            "enum": [
              "excludes",
              "pickFirsts",
              "pickLasts",
              "enableOverride"
            ]
          },
          "properties": {
            "excludes": {
              "description": "Set of excluded patterns. Libraries matching any of these patterns will not be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickFirsts": {
              "description": "Set of patterns where the first occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the first one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickLasts": {
              "description": "Set of patterns where the last occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the last one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enableOverride": {
              "description": "Enable the override of native library. Libraries with the same path will be allowed. ",
              "type": "boolean"
            }
          }
        },
        "headerPath": {
          "type": "string",
          "description": "Path to a directory containing headers to export to dependents of this module."
        }
      }
    },
    "arkOptions": {
      "description": "Configurations related to ark compilation.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "apPath",
          "hostPGO",
          "types",
          "obfuscation",
          "buildProfileFields",
          "runtimeOnly",
          "transformLib"
        ]
      },
      "properties": {
        "apPath": {
          "description": "Application hotspot information file",
          "type": "string",
          "maxLength": 127
        },
        "hostPGO": {
          "description": "Enable profile guided optimization ability. Support in API10+.",
          "type": "boolean"
        },
        "types": {
          "description": "Configurations related to custom types",
          "type": "array",
          "items": {
            "description": "Relative path or package name of the custom type.",
            "type": "string"
          }
        },
        "runtimeOnly": {
          "description": "The configuration of dynamic import.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "sources",
              "packages"
            ]
          },
          "properties": {
            "sources": {
              "description":"The configuration of dynamic import in the form of relative paths, which include files and folders.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "packages": {
              "description": "The configuration of dynamic import in the format of file name and package name.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(@(?![0-9\\-_])[a-zA-Z0-9\\-_]+(?<![\\-_])/)?(?![0-9\\-_.])[a-zA-Z0-9\\-_.]+(?<![\\-_.])$"
              }
            }
          }
        },
        "transformLib": {
          "description": "Configure the transformLib file  used by during the build process.",
          "type": "string",
          "maxLength": 127
        },
        "obfuscation": {
          "description": "Configurations related to code obfuscation.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "ruleOptions"
            ]
          },
          "properties": {
            "ruleOptions": {
              "description": "Configurations related to obfuscation rules",
              "type": "object",
              "propertyNames": {
                "enum": [
                  "enable",
                  "files"
                ]
              },
              "required": [
                "enable"
              ],
              "properties": {
                "enable": {
                  "description": "Enable the code obfuscation",
                  "type": "boolean",
                  "default": true
                },
                "files": {
                  "description": "Declare the files of the obfuscation rules.",
                  "type": [
                    "string",
                    "array"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "buildProfileFields": {
          "description": "build profile used for ArkTS.",
          "type": "object",
          "patternProperties": {
            "^[0-9a-zA-Z_-]+$": {
              "type": [
                "string",
                "number",
                "boolean"
              ]
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  "additionalProperties": true,
  "propertyNames": {
    "enum": [
      "overrides"
    ]
  },
  "properties": {
    "overrides": {
      "description": "Configurations that can override configurations in build-profile.json5.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "buildOption"
        ]
      },
      "properties": {
        "buildOption": {
          "description": "Configure the related configurations used by the module during the build process.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "resOptions",
              "externalNativeOptions",
              "sourceOption",
              "napiLibFilterOption",
              "arkOptions",
              "nativeLib"
            ]
          },
          "properties": {
            "resOptions": {
              "$ref": "#/definitions/resOptions"
            },
            "externalNativeOptions": {
              "$ref": "#/definitions/externalNativeOptions"
            },
            "sourceOption": {
              "$ref": "#/definitions/sourceOption"
            },
            "napiLibFilterOption": {
              "$ref": "#/definitions/napiLibFilterOption"
            },
            "nativeLib": {
              "$ref": "#/definitions/nativeLib"
            },
            "arkOptions": {
              "$ref": "#/definitions/arkOptions"
            }
          }
        }
      }
    }
  }
}
