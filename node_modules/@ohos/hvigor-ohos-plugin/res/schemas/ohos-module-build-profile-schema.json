{
  "title": "openHarmony module-level build-profile configuration",
  "description": "This document describes the configuration details of the openHarmony module-level configuration file build-profile.json5.",
  "type": "object",
  "definitions": {
    "debuggable": {
      "description": "Debuggable configuration.",
      "type": "boolean",
      "default": true
    },
    "copyFrom": {
      "$ref": "#/definitions/name"
    },
    "resOptions": {
      "description": "Configurations related to resource compilation",
      "type": "object"
    },
    "externalNativeOptions": {
      "description": "Configurations related to native compilation.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "path",
          "abiFilters",
          "arguments",
          "cppFlags",
          "cFlags",
          "targets"
        ]
      },
      "properties": {
        "path": {
          "description": "Path of the CMakeLists.txt file, for example, ./src/main/cpp/CMakeLists.txt or D:/CMakeLists.txt.",
          "type": "string"
        },
        "abiFilters": {
          "description": "Defines the CPU architecture type of the system where the CPP application runs. Multiple CPU architecture types can be included, for example, Arm64-v8a.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "arm64-v8a",
              "armeabi-v7a",
              "x86_64"
            ]
          },
          "minItems": 1
        },
        "arguments": {
          "description": "Specifies cmake compilation parameters, for example, -v -DOHOS_STL=c++_static",
          "type": "string"
        },
        "cppFlags": {
          "description": "Specifies the settings related to CMAKE_CXX_FLAGS.",
          "type": "string"
        },
        "cFlags": {
          "description": "Specifies the settings related to CMAKE_C_FLAGS.",
          "type": "string"
        },

        "targets": {
          "description": "Specifies the library and executable targets from your CMake project that hvigor should build.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sourceOption": {
      "description": "Different tags are used to classify source codes so that different source codes can be processed differently during the build process.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "workers"
        ]
      },
      "properties": {
        "workers": {
          "description": "Specifies the ArkTS/TS/JS source code that uses node.js worker, The source code is processed separately during the build process.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\.{1,2}\/.*$"
          }
        }
      }
    },
    "napiLibFilterOption": {
      "description": "Filter options for library (.so) files",
      "deprecationMessage": "Please use 'nativeLib/filter' instead in API10 or later.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "excludes",
          "pickFirsts",
          "pickLasts",
          "enableOverride"
        ]
      },
      "properties": {
        "excludes": {
          "description": "Set of excluded patterns. Libraries matching any of these patterns will not be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pickFirsts": {
          "description": "Set of patterns where the first occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the first one will be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pickLasts": {
          "description": "Set of patterns where the last occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the last one will be packaged.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableOverride": {
          "description": "Enable the override of native library. Libraries with the same path will be allowed. ",
          "type": "boolean"
        }
      }
    },
    "nativeLib": {
      "description": "Native lib options",
      "type": "object",
      "propertyNames": {
        "enum": [
          "debugSymbol",
          "filter",
          "headerPath",
          "collectAllLibs"
        ]
      },
      "properties": {
        "collectAllLibs": {
          "description": "Whether to lift the restriction that only files with the .so extension are collected under the libs directory.",
          "type": "boolean",
          "default": false
        },
        "debugSymbol": {
          "description": "debugSymbol option",
          "type": "object",
          "propertyNames": {
            "enum": [
              "strip",
              "exclude"
            ]
          },
          "properties": {
            "strip": {
              "description": "Specifies whether to strip .so files.",
              "type": "boolean"
            },
            "exclude": {
              "description": "Lists the .so files to be excluded from strip. If strip is set to true, the matched .so files in the list are not stripped. If strip is set to false, only the matched .so files in the list are stripped.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "filter": {
          "description": "Native libs filter option",
          "type": "object",
          "propertyNames": {
            "enum": [
              "excludes",
              "pickFirsts",
              "pickLasts",
              "enableOverride",
              "select"
            ]
          },
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "package",
                    "version",
                    "include",
                    "exclude"
                  ]
                },
                "properties": {
                  "package": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "excludes": {
              "description": "Set of excluded patterns. Libraries matching any of these patterns will not be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickFirsts": {
              "description": "Set of patterns where the first occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the first one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickLasts": {
              "description": "Set of patterns where the last occurrence is packaged into HAP/HSP. For each libraries matched any of these pattern, only the last one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enableOverride": {
              "description": "Enable the override of native library. Libraries with the same path will be allowed. ",
              "type": "boolean"
            }
          }
        },
        "headerPath": {
          "type": "string",
          "description": "Path to a directory containing headers to export to dependents of this module."
        }
      }
    },
    "arkOptions": {
      "description": "Configurations related to ark compilation.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "apPath",
          "hostPGO",
          "types",
          "obfuscation",
          "buildProfileFields",
          "runtimeOnly",
          "integratedHsp",
          "branchElimination",
          "transformLib"
        ]
      },
      "properties": {
        "apPath": {
          "description": "Application hotspot information file",
          "type": "string",
          "maxLength": 127
        },
        "hostPGO": {
          "description": "Enable profile guided optimization ability. Support in API10+.",
          "type": "boolean"
        },
        "types": {
          "description": "Configurations related to custom types",
          "type": "array",
          "items": {
            "description": "Relative path or package name of the custom type.",
            "type": "string"
          }
        },
        "runtimeOnly": {
          "description": "The configuration of dynamic import.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "sources",
              "packages"
            ]
          },
          "properties": {
            "sources": {
              "description":"The configuration of dynamic import in the form of relative paths, which include files and folders.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^\\.{1,2}\/.*$"
              }
            },
            "packages": {
              "description": "The configuration of dynamic import in the format of file name and package name.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(@(?![0-9\\-_])[a-zA-Z0-9\\-_]+(?<![\\-_])/)?(?![0-9\\-_.])[a-zA-Z0-9\\-_.]+(?<![\\-_.])$"
              }
            }
          }
        },
        "integratedHsp": {
          "description": "Whether to enable the integrated HSP.",
          "type": "boolean"
        },
        "obfuscation": {
          "description": "Configurations related to code obfuscation.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "ruleOptions"
            ]
          },
          "properties": {
            "ruleOptions": {
              "description": "Configurations related to obfuscation rules",
              "type": "object",
              "propertyNames": {
                "enum": [
                  "enable",
                  "files"
                ]
              },
              "required": [
                "enable"
              ],
              "properties": {
                "enable": {
                  "description": "Enable the code obfuscation",
                  "type": "boolean",
                  "default": true
                },
                "files": {
                  "description": "Declare the files of the obfuscation rules.",
                  "type": [
                    "string",
                    "array"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "buildProfileFields": {
          "description": "build profile used for ArkTS.",
          "type": "object",
          "patternProperties": {
            "^[0-9a-zA-Z_-]+$": {
              "type": [
                "string",
                "number",
                "boolean"
              ]
            }
          },
          "additionalProperties": false
        },

        "branchElimination": {
          "description": "enbale branchElimination",
          "type": "boolean"
        },
        "transformLib": {
          "description": "Configure the transformLib file  used by during the build process.",
          "type": "string",
          "maxLength": 127
        }
      }
    },
    "buildOption": {
      "description": "Configure the related configurations used by the module during the build process.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "resOptions",
          "externalNativeOptions",
          "sourceOption",
          "napiLibFilterOption",
          "arkOptions",
          "nativeLib"
        ]
      },
      "properties": {
        "resOptions": {
          "$ref": "#/definitions/resOptions"
        },
        "externalNativeOptions": {
          "$ref": "#/definitions/externalNativeOptions"
        },
        "sourceOption": {
          "$ref": "#/definitions/sourceOption"
        },
        "napiLibFilterOption": {
          "$ref": "#/definitions/napiLibFilterOption"
        },
        "nativeLib": {
          "$ref": "#/definitions/nativeLib"
        },
        "arkOptions": {
          "$ref": "#/definitions/arkOptions"
        }
      }
    },
    "buildOptionSetItems": {
      "description": "Configure the related configurations used by the module during the build process.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "name",
          "debuggable",
          "copyFrom",
          "resOptions",
          "externalNativeOptions",
          "sourceOption",
          "napiLibFilterOption",
          "arkOptions",
          "nativeLib"
        ]
      },
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "debuggable": {
          "$ref": "#/definitions/debuggable"
        },
        "copyFrom": {
          "$ref": "#/definitions/copyFrom"
        },
        "resOptions": {
          "$ref": "#/definitions/resOptions"
        },
        "externalNativeOptions": {
          "$ref": "#/definitions/externalNativeOptions"
        },
        "sourceOption": {
          "$ref": "#/definitions/sourceOption"
        },
        "napiLibFilterOption": {
          "$ref": "#/definitions/napiLibFilterOption"
        },
        "nativeLib": {
          "$ref": "#/definitions/nativeLib"
        },
        "arkOptions": {
          "$ref": "#/definitions/arkOptions"
        }
      }
    },
    "name": {
      "description": "Name of configurations.",
      "type": "string",
      "pattern": "^[0-9a-zA-Z_-]+$"
    }
  },
  "propertyNames": {
    "enum": [
      "apiType",
      "targets",
      "showInServiceCenter",
      "buildOption",
      "buildOptionSet",
      "buildModeBinder",
      "entryModules"
    ]
  },
  "properties": {
    "targets": {
      "description": "Defines different target schemes customized for the module. Multiple target schemes can be included. By default, a default target exists.",
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "enum": [
            "name",
            "runtimeOS",
            "config",
            "source",
            "resource",
            "output"
          ]
        },
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "runtimeOS": {
            "description": "The type of runtimeOS specified by the target",
            "type": "string",
            "enum": [
              "HarmonyOS",
              "OpenHarmony"
            ]
          },
          "output": {
            "description": "Customize the configuration of the application package generated by the product.",
            "type": "object",
            "propertyNames": {
              "enum": [
                "artifactName"
              ]
            },
            "required": [
              "artifactName"
            ],
            "properties": {
              "artifactName": {
                "description": "Customize the name of the application package generated by the product.",
                "type": "string",
                "pattern": "^[\\da-zA-Z0-9._-]+$"
              }
            }
          },
          "config": {
            "description": "Configurations related to target customization ",
            "type": "object",
            "propertyNames": {
              "enum": [
                "distroFilter",
                "distributionFilter",
                "deviceType",
                "buildOption",
                "atomicService"
              ]
            },
            "properties": {
              "distroFilter": {
                "description": "This tag is used for precise matching during cloud distribution in the AppGallery and defines the HAP distribution policy.",
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "apiVersion",
                    "screenShape",
                    "screenWindow",
                    "screenDensity",
                    "countryCode"
                  ]
                },
                "properties": {
                  "apiVersion": {
                    "description": "Indicates the supported apiVersion range. The value can be 3, 4, or 5. This label is optional.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 3
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenShape": {
                    "description": "Indicates the screen shape enumeration. The value can be circle or rect, indicating a circle or rectangle screen.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "circle",
                            "rect"
                          ]
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenWindow": {
                    "description": "Indicates the resolution of the window when the application is running. This parameter can be configured only for liteWearable devices. This field is optional. If this field is configured, the value must be valid. The tag value type is a string array.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^([1-9][0-9]*)\\*([1-9][0-9]*)$"
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenDensity": {
                    "description": "This label indicates the pixel density of the screen (dpi: Dots Per Inch). This field is optional. If this field is configured, the value must be valid. The tag value is a string array.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "sdpi",
                            "mdpi",
                            "ldpi",
                            "xldpi",
                            "xxldpi",
                            "xxxldpi"
                          ]
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "countryCode": {
                    "description": "This label indicates the country code to be distributed to the application. The specific value is subject to the ISO-3166 -1 standard. Multiple country and region enumeration definitions are supported. This field is optional. If this field is configured, the value must be valid. The tag value is astring array. The substring indicates the supported country or region and consists of two uppercase letters.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "uniqueItems": true
                      }
                    }
                  }
                }
              },
              "distributionFilter": {
                "description": "This tag is used for precise matching during cloud distribution in the AppGallery and defines the HAP distribution policy.",
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "apiVersion",
                    "screenShape",
                    "screenWindow",
                    "screenDensity",
                    "countryCode"
                  ]
                },
                "properties": {
                  "apiVersion": {
                    "description": "Indicates the supported apiVersion range. The value can be 3, 4, or 5. This label is optional.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 3
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenShape": {
                    "description": "Indicates the screen shape enumeration. The value can be circle or rect, indicating a circle or rectangle screen.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "circle",
                            "rect"
                          ]
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenWindow": {
                    "description": "Indicates the resolution of the window when the application is running. This parameter can be configured only for liteWearable devices. This field is optional. If this field is configured, the value must be valid. The tag value type is a string array.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^([1-9][0-9]*)\\*([1-9][0-9]*)$"
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "screenDensity": {
                    "description": "This label indicates the pixel density of the screen (dpi: Dots Per Inch). This field is optional. If this field is configured, the value must be valid. The tag value is a string array.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "sdpi",
                            "mdpi",
                            "ldpi",
                            "xldpi",
                            "xxldpi",
                            "xxxldpi"
                          ]
                        },
                        "uniqueItems": true
                      }
                    }
                  },
                  "countryCode": {
                    "description": "This label indicates the country code to be distributed to the application. The specific value is subject to the ISO-3166 -1 standard. Multiple country and region enumeration definitions are supported. This field is optional. If this field is configured, the value must be valid. The tag value is astring array. The substring indicates the supported country or region and consists of two uppercase letters.",
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "policy",
                        "value"
                      ]
                    },
                    "required": [
                      "policy",
                      "value"
                    ],
                    "properties": {
                      "policy": {
                        "description": "The policy tag indicates the list rule of the value of the sublabel. Either exclude or include can be used.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "value": {
                        "description": "Indicates the value range of the sublabel.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "uniqueItems": true
                      }
                    }
                  }
                }
              },
              "deviceType": {
                "description": "Select the range of devices supported by the target.",
                "type": "array",
                "items": {
                  "type": "string",
                  "maxLength": 127
                }
              },
              "buildOption": {
                "$ref": "#/definitions/buildOption"
              },
              "atomicService": {
                "description": "Defines atomic service for target.",
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "preloads"
                  ]
                },
                "properties": {
                  "preloads": {
                    "description": "Defines modules are preloaded when the current module run.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "propertyNames": {
                        "enum": [
                          "moduleName"
                        ]
                      },
                      "properties": {
                        "moduleName": {
                          "description": "Defines the module which will be preloaded.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "source": {
            "description": "Specifies the target code range, which is used to customize target functions, such as ability selection and page customization.",
            "type": "object",
            "propertyNames": {
              "enum": [
                "abilities",
                "pages",
                "sourceRoots"
              ]
            },
            "properties": {
              "abilities": {
                "description": "Customize the capability range of a target.",
                "type": "array",
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "enum": [
                      "name",
                      "pages",
                      "res",
                      "icon",
                      "label",
                      "launchType"
                    ]
                  },
                  "properties": {
                    "name": {
                      "description": "Specifies the name of the ability selected by the target.",
                      "type": "string",
                      "maxLength": 127
                    },
                    "pages": {
                      "description": "In FaMode,Specifies the page of the ability selected by the target.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1
                    },
                    "res": {
                      "description": "Specify the resource directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "icon": {
                      "description": "Indicates the index to the ability icon file, in the format of \"$media:ability_icon\".This label can be left blank by default.",
                      "type": "string",
                      "pattern": "^[$]media:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
                    },
                    "label": {
                      "description": "Indicates the ability name visible to users. The tag value is set to the resource index of this name to support multiple languages.",
                      "type": "string",
                      "maxLength": 255,
                      "pattern": "^[$]string:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
                    },
                    "launchType": {
                      "description": "Indicates the boot mode of ability.",
                      "type": "string",
                      "enum": [
                        "standard",
                        "singleton",
                        "specified",
                        "multiton"
                      ],
                      "default": "singleton"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "pages": {
                "description": "In StageMode,specifies the page of the ability selected by the target.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "sourceRoots": {
                "description": "In StageMode,specifies the extended source directories of the ability selected by the target.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            }
          },
          "resource": {
            "description": "Resource directory contained in the module target",
            "type": "object",
            "propertyNames": {
              "enum": [
                "directories"
              ]
            },
            "properties": {
              "directories": {
                "description": "Resource directory contained in the module target, if this field is not configured, the default value is ./src/main/resources",
                "type": "array",
                "items": {
                  "description": "Relative directory of the resource,list ./src/main/resources ",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "minItems": 1
    },
    "showInServiceCenter": {
      "description": "Indicates whether the module is displayed in the service center of the openHarmony system.",
      "type": "boolean"
    },
    "buildOption": {
      "$ref": "#/definitions/buildOption"
    },
    "buildOptionSet": {
      "description": "Set of build configuration, each of which is the universal set of configuration options for all available tools in the currently supported compilation process.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/buildOptionSetItems",
        "required": [
          "name"
        ]
      }
    },
    "buildModeBinder": {
      "description": "Association configuration between build mode and build configurations, through which different build configurations and targets can be combined and bound to corresponding build modes, where build modes need to be in the engineering level build pattern list.",
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "enum": [
            "buildModeName",
            "mappings"
          ]
        },
        "properties": {
          "buildModeName": {
            "$ref": "#/definitions/name"
          },
          "mappings": {
            "description": "The specific mapping table in the build mode binding describes the one-to-one relationship between the targets and build configurations.",
            "type": "array",
            "items": {
              "type": "object",
              "propertyNames": {
                "enum": [
                  "targetName",
                  "buildOptionName"
                ]
              },
              "properties": {
                "targetName": {
                  "$ref": "#/definitions/name"
                },
                "buildOptionName": {
                  "$ref": "#/definitions/name"
                }
              }
            }
          }
        }
      }
    },
    "entryModules": {
      "description": "If the module is a feature module, this field needs to be used to specify the associated entry module.In the stageMode project, this field is deprecated, but the compatibility of the old project is still maintained.",
      "type": "array",
      "items": {
        "description": "Associated entry module name",
        "type": "string"
      },
      "minItems": 1
    },
    "apiType": {
      "type": "string",
      "description": "Ability API model type. The faMode and updated stageMode models can be configured.",
      "enum": [
        "faMode",
        "stageMode"
      ]
    }
  },
  "if": {
    "properties": {
      "apiType": {
        "const": "stageMode"
      }
    }
  },
  "then": {
    "properties": {
      "targets": {
        "items": {
          "propertyNames": {
            "enum": [
              "name",
              "config",
              "source",
              "resource",
              "runtimeOS",
              "output"
            ]
          },
          "properties": {
            "source": {
              "propertyNames": {
                "enum": [
                  "pages",
                  "abilities",
                  "sourceRoots"
                ]
              },
              "properties": {
                "abilities": {
                  "description": "Customize the capability range of a target.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "enum": [
                        "name",
                        "icon",
                        "label",
                        "launchType"
                      ]
                    }
                  }
                },
                "sourceRoots": {
                  "description": "In StageMode,specifies the extended source directories of the ability selected by the target.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1
                }
              }
            },
            "config": {
              "propertyNames": {
                "enum": [
                  "hapName",
                  "deviceType",
                  "buildOption",
                  "distributionFilter",
                  "atomicService"
                ]
              }
            }
          }
        }
      }
    }
  },
  "else": {
    "properties": {
      "targets": {
        "items": {
          "propertyNames": {
            "enum": [
              "name",
              "runtimeOS",
              "config",
              "source",
              "resource",
              "output"
            ]
          },
          "properties": {
            "source": {
              "propertyNames": {
                "enum": [
                  "abilities"
                ]
              }
            },
            "properties": {
              "abilities": {
                "description": "Customize the capability range of a target.",
                "type": "array",
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "enum": [
                      "name",
                      "pages",
                      "res"
                    ]
                  }
                }
              }
            },
            "config": {
              "propertyNames": {
                "enum": [
                  "hapName",
                  "deviceType",
                  "buildOption",
                  "distroFilter"
                ]
              },
              "properties": {
                "buildOption": {
                  "propertyNames": {
                    "enum": [
                      "name",
                      "debuggable",
                      "copyFrom",
                      "resOptions",
                      "externalNativeOptions",
                      "sourceOption",
                      "napiLibFilterOption",
                      "arkOptions",
                      "nativeLib"
                    ]
                  },
                  "properties": {
                    "arkOptions": {
                      "propertyNames": {
                        "enum": [
                          "apPath",
                          "hostPGO",
                          "types",
                          "obfuscation"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "buildOption": {
        "propertyNames": {
          "enum": [
            "name",
            "debuggable",
            "copyFrom",
            "resOptions",
            "externalNativeOptions",
            "sourceOption",
            "napiLibFilterOption",
            "arkOptions",
            "nativeLib"
          ]
        },
        "properties": {
          "arkOptions": {
            "propertyNames": {
              "enum": [
                "types"
              ]
            }
          }
        }
      },
      "buildOptionSet": {
        "type": "array",
        "items": {
          "propertyNames": {
            "enum": [
              "name",
              "debuggable",
              "copyFrom",
              "resOptions",
              "externalNativeOptions",
              "sourceOption",
              "napiLibFilterOption",
              "arkOptions",
              "nativeLib"
            ]
          },
          "required": [
            "name"
          ],
          "properties": {
            "arkOptions": {
              "propertyNames": {
                "enum": [
                  "apPath",
                  "hostPGO",
                  "types",
                  "obfuscation"
                ]
              }
            }
          }
        }
      }
    }
  }
}
