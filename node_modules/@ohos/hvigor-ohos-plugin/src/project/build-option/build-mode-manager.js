"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildOptionManager=exports.BuildModeManager=void 0;const hvigor_1=require("@ohos/hvigor"),find_target_product_js_1=require("../../common/find-target-product.js"),build_mode_const_js_1=require("../../const/build-mode-const.js"),common_const_js_1=require("../../const/common-const.js"),task_names_js_1=require("../../tasks/common/task-names.js"),array_util_js_1=require("../../utils/array-util.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),build_option_util_js_1=require("./build-option-util.js"),build_option_util_js_2=require("./build-option-util.js"),module_ohos_config_manager_js_1=require("../../common/global/module-ohos-config-manager.js"),log=ohos_logger_js_1.OhosLogger.getLogger("BuildModeManager");class BuildModeManager{constructor(){this.productBuildOptionMap=new Map,this.targetBuildOptionMap={}}initProjectBuildOptions(i){var o,t,e;this.productBuildOptionMap.clear();const l=BuildModeManager.getBuildMode();build_option_util_js_2.BuildOptionUtil.validateBuildMode(l,i);const n=hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.DEBUGGABLE);log.debug(`Start initialize project's product build option map with build mode ${l}.`);const u=i.getProfileOpt(),d=u.app.products;let r=null!==(o=u.app.buildModeSet)&&void 0!==o?o:[];r=build_option_util_js_2.BuildOptionUtil.arrayDeduplication(r);const _=null!==(e=null===(t=(0,array_util_js_1.getElementFromArr)(r,l))||void 0===t?void 0:t.buildOption)&&void 0!==e?e:{};d.forEach((i=>{var o;let t={};n&&(_.debuggable="true"===hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.DEBUGGABLE));const e=null!==(o=i.buildOption)&&void 0!==o?o:{};log.debug(`Picking option from product '${i.name}' with build mode '${l}'.`),t=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(e,t),t=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(_,t);const u=build_option_util_js_2.BuildOptionUtil.getDefaultBuildModeBuildOpt(l);t=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(u,t),log.debug(`Product '${i.name}' build option: ${JSON.stringify(_,null,"  ")}`),this.productBuildOptionMap.set(i.name,t)})),log.debug(`End initialize project's product build option map with build mode '${l}'.`)}initModuleBuildOptions(i){var o,t,e;const l=i.getName(),n=BuildModeManager.getBuildMode();build_option_util_js_2.BuildOptionUtil.validateBuildMode(n,i.getParentProject()),this.targetBuildOptionMap[l]?this.targetBuildOptionMap[l].clear():this.targetBuildOptionMap[l]=new Map;const u=i.getParentProject().getProfileOpt(),d=build_option_util_js_2.BuildOptionUtil.arrayDeduplication(null!==(o=u.app.buildModeSet)&&void 0!==o?o:[]),r=i.getProfileOpt(),_=build_option_util_js_2.BuildOptionUtil.getOrDefaultBuildModeBinderSet(null!==(t=r.buildModeBinder)&&void 0!==t?t:[]);let s=null!==(e=r.buildOptionSet)&&void 0!==e?e:[];log.debug(`Start initialize module-target build option map, moduleName=${l}, buildMode=${n}`),s=build_option_util_js_2.BuildOptionUtil.arrayDeduplication(s),build_option_util_js_1.BuildOptionCombiner.processCopyFrom(s),i.getTargetOptions().forEach((o=>{var t,e,u,g,p,a,m;let b={};const c=(0,find_target_product_js_1.findTargetProduct)(i.getParentProject());hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.DEBUGGABLE)&&(b.debuggable="true"===hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.DEBUGGABLE));const B=module_ohos_config_manager_js_1.moduleOhosConfigManager.getBuildOption(l);b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(B,b);const O=null!==(e=null===(t=o.config)||void 0===t?void 0:t.buildOption)&&void 0!==e?e:{};log.debug(`Target '${o.name}' config: ${JSON.stringify(O,null,"  ")}`),b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(O,b);const j=this.getBuildOptNameFromMapping(_,n,o.name),M=null!==(u=(0,array_util_js_1.getElementFromArr)(s,j))&&void 0!==u?u:{};b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(M,b),b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(null!==(g=r.buildOption)&&void 0!==g?g:{},b);const v=null!==(p=c.buildOption)&&void 0!==p?p:{};b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(v,b);const h=null!==(m=null===(a=(0,array_util_js_1.getElementFromArr)(d,n))||void 0===a?void 0:a.buildOption)&&void 0!==m?m:{};b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(h,b);const C=build_option_util_js_2.BuildOptionUtil.getDefaultModuleBuildOpt(j);b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(C,b);const f=build_option_util_js_2.BuildOptionUtil.getDefaultBuildModeBuildOpt(n);b=build_option_util_js_1.BuildOptionCombiner.mergeBuildOption(f,b),this.targetBuildOptionMap[l].set(o.name,b)})),this.targetBuildOptionMap[l].forEach(((i,o)=>{log.debug(`Module '${l}' target '${o}' build option: ${JSON.stringify(i,null,"  ")}`)})),log.debug(`End initialize module-target build option map, moduleName=${l}`)}getBuildOptNameFromMapping(i,o,t){var e,l;const n=null!==(l=(null!==(e=i.find((i=>{if(i.buildModeName===o)return i})))&&void 0!==e?e:{}).mappings)&&void 0!==l?l:[];for(const i of n)if(i.targetName===t)return i.buildOptionName;switch(log.debug(`Does not get target '${t}'corresponding build option.`),o){case build_mode_const_js_1.BuildModeConst.DEBUG:case build_mode_const_js_1.BuildModeConst.TEST:return log.debug("Using preset build option 'debug'."),build_mode_const_js_1.BuildOptionConst.DEBUG;case build_mode_const_js_1.BuildModeConst.RELEASE:return log.debug("Using preset build option 'release'."),build_mode_const_js_1.BuildOptionConst.RELEASE;default:return log.debug("Using preset build option 'default'."),build_mode_const_js_1.BuildOptionConst.DEFAULT}}getProductBuildOption(i){var o;const t=null!==(o=this.productBuildOptionMap.get(i))&&void 0!==o?o:{};return log.debug(`Product '${i}' using build option: ${JSON.stringify(t,null,"  ")} in this build.`),t}getTargetBuildOption(i,o){var t,e;const l=null!==(e=null===(t=this.targetBuildOptionMap[i])||void 0===t?void 0:t.get(o))&&void 0!==e?e:{};return log.debug(`Module '${i}' target '${o}' using build option: ${JSON.stringify(l,null,"  ")} in this build.`),l}static getBuildMode(){const i=hvigor_1.hvigorCore.getExtraConfig().get("buildMode");return i||(hvigor_1.hvigorCore.isCommandEntryTask(task_names_js_1.TaskNames.CommonHookTask.ASSEMBLE_APP.name)?build_mode_const_js_1.BuildModeConst.RELEASE:build_mode_const_js_1.BuildModeConst.DEBUG)}}exports.BuildModeManager=BuildModeManager,exports.buildOptionManager=new BuildModeManager;