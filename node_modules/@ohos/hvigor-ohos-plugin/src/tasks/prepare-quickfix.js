"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PrepareQuickfix=void 0;const wdk_1=require("@baize/wdk"),hvigor_1=require("@ohos/hvigor"),promises_1=__importDefault(require("fs/promises")),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),quick_fix_enum_js_1=require("../enum/quick-fix-enum.js"),file_util_js_1=require("../utils/file-util.js"),json_util_1=require("../utils/json-util"),libs_file_cache_util_js_1=require("../utils/libs-file-cache-util.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_names_js_1=require("./common/task-names.js"),ohos_hap_task_js_1=require("./task/ohos-hap-task.js"),logger=ohos_logger_js_1.OhosLogger.getLogger("PrepareQuickfix");class PrepareQuickfix extends ohos_hap_task_js_1.OhosHapTask{constructor(e){var t;super(e,task_names_js_1.TaskNames.Task.PREPARE_QUICKFIX),this.changedFileListPath="",this.debugSymbol=this.targetService.getNativeLibOption().debugSymbol,this.libsDir=this.pathInfo.getIntermediatesStrippedLibsDir(),this.libsCachePath=path_1.default.resolve(this.pathInfo.getPatchDir(),"base_native_libs.json"),this.lastCachePath=path_1.default.resolve(this.pathInfo.getPatchDir(),"libs.json"),this.etsCachePath=path_1.default.resolve(this.pathInfo.getPatchDir(),"ets.json");const i=this.pathInfo.getBuildConfigPath();if(fs_extra_1.default.existsSync(i)){const e=(0,json_util_1.getJson5Obj)(i);this.changedFileListPath=null===(t=null==e?void 0:e.patchConfig)||void 0===t?void 0:t.changedFileList}}async doTaskAction(){const e=await this.collectNativeLibs(),[t,i]=await this.collectEts();await this.collectResfile(),await this.logQuickfixChanges(e,t,i),await libs_file_cache_util_js_1.LibsFileCacheUtil.refreshLibsFileCache(this.pathInfo.getIntermediatesProcessLibs(),this.libsDir,this.lastCachePath,this.debugSymbol),await this.generatePatchJson()}async collectNativeLibs(){const e=path_1.default.resolve(this.pathInfo.getPatchDir(),"libs");await fs_extra_1.default.emptydir(e);const t=fs_extra_1.default.existsSync(this.libsCachePath)?hvigor_1.Json5Reader.getJson5Obj(this.libsCachePath):{stripped:{},libs:{}},i=fs_extra_1.default.existsSync(this.lastCachePath)?hvigor_1.Json5Reader.getJson5Obj(this.lastCachePath):{stripped:{},libs:{}},s=fs_extra_1.default.existsSync(this.libsDir)?await libs_file_cache_util_js_1.LibsFileCacheUtil.generateFileHashesForDirectory(this.libsDir):{},a=this.compareLibs(t.stripped,i.stripped,s);await fs_extra_1.default.emptydir(e);return await fs_extra_1.default.copy(this.libsDir,e,{filter:e=>fs_extra_1.default.statSync(e).isDirectory()||Object.entries(a).some((([t,i])=>""===path_1.default.relative(e,t)&&i>quick_fix_enum_js_1.QuickFixEnum.UNCHANGED)),recursive:!0,overwrite:!0}),a}async collectResfile(){var e;const t=path_1.default.resolve(this.pathInfo.getPatchDir(),"resources","resfile");if(await fs_extra_1.default.emptydir(t),fs_extra_1.default.existsSync(this.changedFileListPath)){const i=null===(e=(0,json_util_1.getJson5Obj)(this.changedFileListPath).resources)||void 0===e?void 0:e.resFile;if(null==i?void 0:i.length)for(const e of i)if(".DS_Store"!==path_1.default.basename(e)&&fs_extra_1.default.existsSync(e)){const i=path_1.default.join(t,path_1.default.basename(e));await fs_extra_1.default.copyFileSync(e,i)}}}async collectEts(){var e;file_util_js_1.FileUtil.checkDirWithoutDelete(path_1.default.resolve(this.pathInfo.getPatchDir(),"ets"));let t=!1,i=!1;if(fs_extra_1.default.existsSync(this.changedFileListPath)){const s=fs_extra_1.default.statSync(this.changedFileListPath);let a={};if(fs_extra_1.default.existsSync(this.etsCachePath)&&(a=(0,json_util_1.getJson5Obj)(this.etsCachePath),i=null!==(e=a.isImportNewFile)&&void 0!==e?e:i),(null==a?void 0:a.changedFileList)!==String(s.mtimeMs))return logger.debug("changedFileList had been changed"),a.changedFileList=String(s.mtimeMs),fs_extra_1.default.writeJSONSync(this.etsCachePath,a),t=!0,[t,i]}return[t,i]}async logQuickfixChanges(e,t,i){var s;let a=null!==(s=(0,wdk_1.max)(Object.values(e)))&&void 0!==s?s:quick_fix_enum_js_1.QuickFixEnum.UNCHANGED;if(a!==quick_fix_enum_js_1.QuickFixEnum.UNCHANGED&&logger.debug(`native files had been changed, state is ${a}`),t&&(a=quick_fix_enum_js_1.QuickFixEnum.LAST,logger.debug("arkTs files or resfile had been changed")),a===quick_fix_enum_js_1.QuickFixEnum.UNCHANGED&&fs_extra_1.default.existsSync(this.changedFileListPath)){const e=(0,json_util_1.getJson5Obj)(this.changedFileListPath);a=this.isChanged(e)?quick_fix_enum_js_1.QuickFixEnum.BASE:a}await fs_extra_1.default.ensureDir(this.pathInfo.getModuleBuildOutputPath()),await fs_extra_1.default.writeJSON(path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),"quickfix.json"),{changes:e,state:a,file:`${this.moduleName}-${this.targetName}-unsigned.hqf`})}compareLibs(e,t,i){const s={};return Object.entries(i).forEach((([i,a])=>s[i]=t[i]&&t[i]!==a?quick_fix_enum_js_1.QuickFixEnum.LAST:e[i]&&e[i]===a?quick_fix_enum_js_1.QuickFixEnum.UNCHANGED:t[i]?quick_fix_enum_js_1.QuickFixEnum.BASE:quick_fix_enum_js_1.QuickFixEnum.LAST)),s}async generatePatchJson(){const e=await PrepareQuickfix.getCurrentHqfVersion(),t=this.projectModel.getAppRes().getAppResOpt(),i={app:{bundleName:t.app.bundleName,versionCode:t.app.versionCode,versionName:t.app.versionName,patchVersionCode:e,patchVersionName:String(e)},module:{name:this.moduleName,type:"patch",deviceTypes:this.moduleModel.getDeviceTypes(),originalModuleHash:""}};await promises_1.default.writeFile(path_1.default.resolve(this.pathInfo.getPatchDir(),"patch.json"),JSON.stringify(i)),logger.debug(`Prepare ${t.app.bundleName} quickfix with patch versionCode ${e}.`)}initTaskDepends(){this.declareDepends("ColdReloadArkTS"),this.declareDepends(task_names_js_1.TaskNames.Task.DO_NATIVE_STRIP.name)}isChanged(e){if(Array.isArray(e))return e.length>0;if("object"==typeof e)for(const t of Array.from(Object.values(e)))if(this.isChanged(t))return!0;return!1}static async getCurrentHqfVersion(){const e=path_1.default.resolve(hvigor_1.PathUtil.getHvigorCacheDir(logger),"outputs","patch","patch.json");if(!fs_extra_1.default.existsSync(e))return 3e6;const t=await fs_extra_1.default.readJSON(e);return parseInt((null==t?void 0:t.patchVersionCode)?t.patchVersionCode:3e6)}}exports.PrepareQuickfix=PrepareQuickfix;