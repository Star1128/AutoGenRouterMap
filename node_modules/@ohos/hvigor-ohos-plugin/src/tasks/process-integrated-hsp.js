"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ProcessIntegratedHsp=void 0;const fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),build_directory_const_js_1=require("../const/build-directory-const.js"),integrated_hsp_utils_js_1=require("../utils/integrated-hsp-utils.js"),process_utils_js_1=require("../utils/process-utils.js"),remote_hsp_utils_js_1=require("../utils/remote-hsp-utils.js"),wdk_1=require("@baize/wdk"),hvigor_1=require("@ohos/hvigor"),sdk_const_js_1=require("../const/sdk-const.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_util_js_1=require("../utils/task-util.js"),task_names_js_1=require("./common/task-names.js"),global_project_data_service_js_1=require("./service/global-project-data-service.js"),ohos_module_task_js_1=require("./task/ohos-module-task.js");class ProcessIntegratedHsp extends ohos_module_task_js_1.OhosModuleTask{constructor(t){super(t,task_names_js_1.TaskNames.CommonTask.PROCESS_INTEGRATED_HSP),this._log=ohos_logger_js_1.OhosLogger.getLogger(ProcessIntegratedHsp.name),this.allRemoteHspPathMap=new Map,this.integratedInputList=[],this.integratedOutputList=[],this.inputFile=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),this.targetData.getModuleTargetOutputFileName("",!1,build_directory_const_js_1.BuildArtifactExtension.DOT_HSP)),this.integratedRemoteHspDir=this.projectModel.getCacheIntegratedHspPath(this.targetData.getProduct().name);const e=this.moduleModel.getRemoteHspPath(),s=this.service.getProjectModel().getRemoteHspPath();(0,remote_hsp_utils_js_1.initSignRemoteHspMap)(e,this.allRemoteHspPathMap),(0,remote_hsp_utils_js_1.initSignRemoteHspMap)(s,this.allRemoteHspPathMap);const i=global_project_data_service_js_1.GlobalProjectDataService.getInstance().getIntegratedHspUtils();if(i)for(const t of this.allRemoteHspPathMap.values())t.isIntegratedHsp&&i.isNeedIntegrated(t.hspDirName)&&(this.integratedInputList.push(t.hspPath),this.integratedOutputList.push(path_1.default.resolve(this.integratedRemoteHspDir,t.hspDirName)),i&&(i.setIntegratedRemoteHsps((0,wdk_1.cloneDeep)({...t,isIntegratedHsp:!1})),global_project_data_service_js_1.GlobalProjectDataService.getInstance().setNeedSignedRemoteHspMap(t.hspDirName,{hspFileName:"",hspDirName:"",version:"",hspPath:"",signedHspPath:"",moduleName:this.moduleModel.getName(),isSigned:!1})))}initTaskDepends(){}declareInputFiles(){return super.declareInputFiles().addEntries([...this.integratedInputList],{isDirectory:!1})}declareOutputFiles(){const t=super.declareOutputFiles();t.addEntries([...this.integratedOutputList],{isDirectory:!1});const e=this.targetData.getProduct().name,s=path_1.default.resolve(this.projectModel.getCacheIntegratedHspPath(e),build_directory_const_js_1.BuildArtifactConst.INTEGRATED_HSP_CACHE);return t.addEntry(s,{isDirectory:!1}),t}async doTaskAction(){const t=global_project_data_service_js_1.GlobalProjectDataService.getInstance().getIntegratedHspUtils();if(t&&0!==this.integratedInputList.length){(0,task_util_js_1.limitMinApiVersion)(this.targetData,sdk_const_js_1.ApiVersion.API_VERSION_11)||this._log._buildError("The integratedHsp can only be used in API 12 and later.")._printErrorAndExit();for(let e=0;e<this.integratedInputList.length;e++)await this.generateIntegratedHsp(this.integratedInputList[e],this.integratedOutputList[e]),t.changeIntegratedHspStatus(path_1.default.basename(this.integratedOutputList[e]));t.writeIntegratedHspCache()}}async generateIntegratedHsp(t,e){const s=this.durationEvent.createSubEvent("process remote integrated HSPcommand","");s.start(),fs_extra_1.default.existsSync(e)||await fs_extra_1.default.mkdir(e,{recursive:!0});const i=(0,integrated_hsp_utils_js_1.generateIntegratedHspCommand)(this.projectModel,this.sdkInfo.getPackageTool(),t,e),a={moduleName:this.moduleName,taskName:this.name,commandLine:i};this._log._printDebugCommand(this.sdkInfo.getPackageTool(),i),s.stop(),s.setLog(s.getName(),hvigor_1.MetricLogType.INFO);const r="submit generate integrated hsp task to work pool",o=this.durationEvent.createSubEvent(r,"");o.start(),await new process_utils_js_1.ProcessUtils(a.moduleName,a.taskName).submitExecutionWithoutReturn(this,this.getWorkerPool(),a,wdk_1.noop,[],o),o.stop(),o.setLog(r,hvigor_1.MetricLogType.INFO)}}exports.ProcessIntegratedHsp=ProcessIntegratedHsp;