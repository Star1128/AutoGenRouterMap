"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PackageSignHar=void 0;const fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),build_directory_const_js_1=require("../../const/build-directory-const.js"),common_const_js_1=require("../../const/common-const.js"),sdk_const_js_1=require("../../const/sdk-const.js"),sign_type_enum_js_1=require("../../enum/sign-type-enum.js"),inject_util_js_1=require("../../utils/inject-util.js"),npm_utils_js_1=require("../../utils/npm-utils.js"),base_sign_js_1=require("../base/base-sign.js"),task_names_js_1=require("../common/task-names.js"),sign_model_js_1=require("../sign/command-builder-impl/sign-model.js"),sign_util_js_1=require("../sign/sign-util.js");class PackageSignHar extends base_sign_js_1.BaseSign{constructor(t){var s;super(t,task_names_js_1.TaskNames.CommonTask.PACKAGE_SIGN_HAR,sign_type_enum_js_1.SignTypeEnum.HAR),this.compiledRoot=this.getTaskTempDir(this.targetData,`${this.targetData.getTargetName()}@${task_names_js_1.TaskNames.Task.PACKAGE_HAR.name}`,!1),this.taskTmpRoot=this.getTaskTempDir(this.targetData),this.packageRoot=path_1.default.resolve(this.taskTmpRoot,build_directory_const_js_1.BuildDirConst.PACKAGE_HAP);const e=null===(s=this.targetData.getTargetOpt().output)||void 0===s?void 0:s.artifactName,i=e?`${e}`:`${this.moduleName}`;this.outputFile=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),`${i}-signed.har`)}beforeTask(){fs_extra_1.default.emptyDirSync(this.taskTmpRoot),fs_extra_1.default.existsSync(this.outputFile)&&fs_extra_1.default.rmSync(this.outputFile)}declareInputs(){const t=super.declareInputs();return t.delete(common_const_js_1.CommonConst.ENABLE_SIGN_TASK),t.set("isDaemon",inject_util_js_1.InjectUtil.isDaemon()).set("compileApiVersion",this.compileApiVersion).set("compatibleApiVersion",this.compatibleApiVersion).set("isSigned",(0,sign_util_js_1.isSigned)(this.projectModel,!0)).set("isHarmonyOS",this.targetService.getTargetData().isHarmonyOS()),t}taskShouldDo(){return inject_util_js_1.InjectUtil.isDaemon()&&this.isOhpmProject&&(0,sign_util_js_1.isSigned)(this.projectModel,!0)&&this.compileApiVersion>=sdk_const_js_1.ApiVersion.API_VERSION_12&&this.compatibleApiVersion>=sdk_const_js_1.ApiVersion.API_VERSION_12&&this.targetService.getTargetData().isHarmonyOS()&&fs_extra_1.default.existsSync(this.sdkInfo.getHosSignTool())}declareInputFiles(){return super.declareInputFiles().addEntry(this.compiledRoot,{isDirectory:!0}).addEntry(this.taskTmpRoot,{isDirectory:!0})}declareOutputFiles(){const t=super.declareOutputFiles();return t.addEntry(this.outputFile,{isDirectory:!1}),t}async doTaskAction(){fs_extra_1.default.copySync(this.compiledRoot,this.packageRoot);const t=new sign_model_js_1.SignModel(this.signType,this.taskTmpRoot,"");await this.signUtil.sign(t,this.durationEvent),await(0,npm_utils_js_1.execOhpmPack)(this.taskTmpRoot,this.outputFile,this.durationEvent,!1)}initTaskDepends(){}}exports.PackageSignHar=PackageSignHar;