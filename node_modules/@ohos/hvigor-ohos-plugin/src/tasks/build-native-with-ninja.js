"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.BuildNativeWithNinja=void 0;const fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),native_command_builder_js_1=require("../builder/native-command-builder.js"),common_const_js_1=require("../const/common-const.js"),cpu_abi_enum_js_1=require("../enum/cpu-abi-enum.js"),file_util_js_1=require("../utils/file-util.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_names_js_1=require("./common/task-names.js"),build_native_with_cmake_js_1=require("./build-native-with-cmake.js");var Task=task_names_js_1.TaskNames.Task;const hvigor_1=require("@ohos/hvigor"),cmake_util_js_1=require("../utils/cmake-util.js"),abstract_build_native_js_1=require("./abstract-build-native.js");class BuildNativeWithNinja extends abstract_build_native_js_1.AbstractBuildNative{constructor(t){super(t,Task.BUILD_NATIVE_WITH_NINJA),this._log=ohos_logger_js_1.OhosLogger.getLogger(BuildNativeWithNinja.name),this.localHsp=this.service.getDependencyInfo().getHspDependencies().map((t=>t.getDependencyRootPath()))}initTaskDepends(){var t,e,i;this.declareDepends(build_native_with_cmake_js_1.BuildNativeWithCmake.name);for(const a of this.service.getDependencyInfo().getModuleDependencyMap().keys()){const s=null!==(e=null!==(t=this.projectModel.getTarget(a,this.targetName))&&void 0!==t?t:this.projectModel.getTarget(a,"default"))&&void 0!==e?e:this.projectModel.getTarget(a),o=null!==(i=null==s?void 0:s.getTargetData().getTargetName())&&void 0!==i?i:"default";this.declareDepends(`${o}@${Task.DO_NATIVE_STRIP.name}`,a)}}async buildCommand(t,e,i,a,s){var o;const n=e.getPathInfo(),l=path_1.default.resolve(n.getNinjaWorkDir(),t),r=new native_command_builder_js_1.NativeCommandBuilder(this.sdkInfo.getNativeNinjaTool()).changeToDir(l).build();(null===(o=this._nativeOption)||void 0===o?void 0:o.targets)&&this._nativeOption.targets.length>0&&r.push(...this._nativeOption.targets),this._log._printDebugCommand("Ninja",r),s.stop(),s.setLog(s.getName(),hvigor_1.MetricLogType.INFO);const _=`submit CMake task to work pool with ABI of ${t}`,u=this.durationEvent.createSubEvent(_,"");u.start(),await this.executeCommand(r,l,i,a,u),u.stop(),u.setLog(_,hvigor_1.MetricLogType.INFO)}taskShouldDo(){return cmake_util_js_1.CmakeUtil.nativeTaskCondition(this.moduleModel,this.targetData,this._nativeOption)}beforeTask(){fs_extra_1.default.emptyDirSync(this.pathInfo.getIntermediatesCppOutPut())}async doTaskAction(){var t;const e=this.targetData.getPathInfo(),i=path_1.default.resolve(e.getIntermediatesCppOutPut()),a=cmake_util_js_1.CmakeUtil.checkAbiFilters(null===(t=this._nativeOption)||void 0===t?void 0:t.abiFilters,this.targetData.isHarmonyOS(),this.moduleModel);for(const t of a){const a=`generate Ninja command with ABI of ${t}`,s=this.durationEvent.createSubEvent(a,"");s.start();const o=path_1.default.resolve(i,t),n=path_1.default.resolve(e.getNinjaWorkDir(),t);await this.buildCommand(t,this.targetData,(async()=>{const e=cmake_util_js_1.CmakeUtil.parseLibraries(n,this.targetName,t);await this.syncOutput(e,o,n)}),[],s),await this.syncStl(t,o,e)}}async syncOutput(t,e,i){var a;const s=new Map,o=null===(a=this._nativeOption)||void 0===a?void 0:a.targets;for(const[a,n]of t.entries())o&&o.length>0&&-1===o.indexOf(a)?this._log.debug(`Case targets are configured, dependency ${a} are not synchronized.`):await this.syncLibOutputs(n,e,i,s)}async syncLibOutputs(t,e,i,a){const s=t.getNameOnDisk();if(!s)return;const o=path_1.default.resolve(e,s),n=t.getOutputs().map((t=>path_1.default.isAbsolute(t)?path_1.default.resolve(t):path_1.default.resolve(i,t))).filter((t=>fs_extra_1.default.existsSync(t)&&!hvigor_1.PathUtil.checkCopyPathIsSame(t,o)));for(const t of n)this._log.debug(`External build set its own library output location for ${s}, which will be hard linked or copy to the expected location.`),await file_util_js_1.FileUtil.linkFile(t,o);await this.syncLibDeps(t,e,i,a)}async syncLibDeps(t,e,i,a){for(let s of t.getRuntimeFiles()){s=path_1.default.isAbsolute(s)?path_1.default.resolve(s):path_1.default.resolve(i,s);const t=path_1.default.resolve(e,path_1.default.basename(s));!fs_extra_1.default.existsSync(s)||hvigor_1.PathUtil.checkCopyPathIsSame(s,t)||this.excludeFromHsp(s)||(a.get(s)&&a.get(s)===t||(a.set(s,t),await file_util_js_1.FileUtil.linkFile(s,t)))}}async syncStl(t,e,i){const a=this.getArguments(),s=a.some((t=>"-DOHOS_STL=c++_static"===t))||a.some((t=>"-DOHOS_STL=none"===t)),o=path_1.default.resolve(e,"libc++.so"),n=path_1.default.resolve(e,common_const_js_1.NativeConst.SHARED_STL_LIBRARY),l=path_1.default.resolve(i.getModuleBuildIntermediates(),"libs",t);if(s)return fs_extra_1.default.removeSync(o),fs_extra_1.default.removeSync(n),void fs_extra_1.default.removeSync(l);const r=path_1.default.resolve(this.sdkInfo.getSdkNativeDir(),"llvm","lib",cpu_abi_enum_js_1.CpuAbiEnum.getCpuType(t),"c++"),_=path_1.default.resolve(r,common_const_js_1.NativeConst.SHARED_STL_LIBRARY);fs_extra_1.default.existsSync(_)&&await file_util_js_1.FileUtil.linkFile(_,n)}getArguments(){var t;const e=null===(t=this._nativeOption)||void 0===t?void 0:t.arguments;return e&&""!==e?e.split(" "):[]}excludeFromHsp(t){return!!this.localHsp.find((e=>path_1.default.normalize(t).startsWith(path_1.default.normalize(e))))}}exports.BuildNativeWithNinja=BuildNativeWithNinja;