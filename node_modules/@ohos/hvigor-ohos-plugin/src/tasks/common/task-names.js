"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TaskNames=exports.TaskGroupType=void 0;const core_task_js_1=require("@ohos/hvigor/src/base/external/task/core-task.js");var TaskGroupType,TaskNames;!function(e){e.ARKTS_TASK_GROUP="ArkTS",e.JS_TASK_GROUP="JS",e.RESOURCES_TASK_GROUP="Resources",e.PACKAGE_TASK_GROUP="Package",e.SIGN_TASK_GROUP="Sign",e.VERIFICATION_TASK_GROUP="Verification",e.GENERATE_TASK_GROUP="Generate",e.HOOK_TASK_GROUP="Hook",e.CONFIG_TASK_GROUP="Config",e.NATIVE_TASK_GROUP="Native"}(TaskGroupType=exports.TaskGroupType||(exports.TaskGroupType={})),function(e){const o="Legacy",r="Shell";class s{}s.ARK_PREVIEW_COMPILE={name:`${o}PreviewCompile`,description:"Compile ArkTS components on preview in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.JS_PREVIEW_COMPILE={name:`${o}PreviewCompile`,description:"Compile JS components on preview in the FA model.",group:TaskGroupType.JS_TASK_GROUP},s.ARK_UNIT_TEST={name:`${o}UnitTest`,description:"Compile ArkTS components at unit test time in the FA model. ",group:TaskGroupType.ARKTS_TASK_GROUP},s.JS_UNIT_TEST={name:`${o}UnitTest`,description:"Compile JS components at unit test time in the FA model.",group:TaskGroupType.JS_TASK_GROUP},s.COMPILE_ARK={name:`${o}Compile`,description:"Compile ArkTS components for large-system devices in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.PREVIEW_BUILD={name:`${o}PreviewBuild`,description:"Build preview in the FA model.",group:TaskGroupType.HOOK_TASK_GROUP},s.PROCESS_RESOURCE={name:`${o}ProcessResource`,description:"Process resources in the FA model.",group:TaskGroupType.RESOURCES_TASK_GROUP},s.PREVIEW_PROCESS_RESOURCE={name:`${o}PreviewProcessResource`,description:"Process preview resources incrementally in the FA model.",group:TaskGroupType.RESOURCES_TASK_GROUP},s.PRE_BUILD={name:`${o}PreBuild`,description:"Pre-build in the FA model.",group:TaskGroupType.VERIFICATION_TASK_GROUP},s.SYSCAP_TRANSFORM={name:`${o}SyscapTransform`,description:"Transform SysCap in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.GENERATE_METADATA={name:`${o}GenerateMetadata`,description:"Generate metadata in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.COMPILE_LITE_NODE={name:`${o}CompileLite`,description:"Compile ArkTS or JS components using Node.js for mini-, small- and standard-system devices in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.COMPILE_NODE={name:`${o}Build`,description:"Compile ArkTS or JS components using Node.js for large-system devices in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.OHOS_TEST_ARK_COMPILE={name:`${o}OhosTestCompile`,description:"Compile ArkTS or JS components using Node.js for large-system devices in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.OHOS_TEST_COMPILE_NODE={name:`${o}OhosTestBuild`,description:"Compile ArkTS or JS components using Node.js for large-system devices in the FA model.",group:TaskGroupType.ARKTS_TASK_GROUP},s.MERGE_NODE_ASSETS={name:`${o}ProcessNodeAssets`,description:"Merge all ArkTS and JS assets into a directory before package in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.GENERATE_LITE_CODE={name:`${o}GenerateLiteCode`,description:"Generate project code for mini-, small- and standard-system devices in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.SIGN_LITE_BIN={name:`${o}SignLiteBin`,description:"Sign BIN files for mini-, small- and standard-system devices in the FA model.",group:TaskGroupType.SIGN_TASK_GROUP},s.COMPILE_RESOURCE={name:`${o}CompileResource`,description:"Compile project resources in the FA model.",group:TaskGroupType.RESOURCES_TASK_GROUP},s.PREVIEW_COMPILE_RESOURCE={name:`${o}PreviewCompileResource`,description:"Use Preview to compile project resources in the FA model.",group:TaskGroupType.RESOURCES_TASK_GROUP},s.GENERATE_HAR_JS_MANIFEST={name:`${o}GenerateHarJsManifest`,description:"Generate a fake JS manifest in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.GENERATE_JS_MANIFEST={name:`${o}GenerateJsManifest`,description:"Generate JsManifest.json in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.MAKE_PACK_INFO={name:`${o}MakePackInfo`,description:"Generate module pack.info.",group:TaskGroupType.GENERATE_TASK_GROUP},s.MAKE_PROJECT_PACK_INFO={name:`${o}MakeProjectPackInfo`,description:"Generate project pack.info in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.MERGE_PROFILE={name:`${o}MergeProfile`,description:"Merge app config manifest files in the FA model.",group:TaskGroupType.CONFIG_TASK_GROUP},s.PACKAGE_HAP={name:`${o}PackageHap`,description:"Build the HAP package in the FA model.",group:TaskGroupType.PACKAGE_TASK_GROUP},s.GENERATE_LOADER_JSON={name:`${o}GenerateLoaderJson`,description:"Generate a loader.json file in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.GENERATE_HAR_LOADER_JSON={name:`${o}GenerateHarLoaderJson`,description:"Generate a loader.json file for the HAR package in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},s.PROCESS_PROFILE={name:`${o}ProcessProfile`,description:"Process the app manifest configuration file in the FA model.",group:TaskGroupType.CONFIG_TASK_GROUP},s.PACKAGE_HAR={name:`${o}PackageHar`,description:"Build the legacy HAR package in the FA model.",group:TaskGroupType.PACKAGE_TASK_GROUP},s.PROCESS_OH_PACKAGE_JSON={name:`${o}ProcessOHPackageJson`,description:"Process HAR oh-package.json5 in the FA model.",group:TaskGroupType.GENERATE_TASK_GROUP},e.LegacyFATask=s;class a{}a.PREVIEW_UPDATE_ASSETS={name:"PreviewUpdateAssets",description:"Update main_pages.json and module.json before PreviewBuild.",group:TaskGroupType.CONFIG_TASK_GROUP},a.COMPILE_ARK={name:"Compile",description:"Compile ArkTS or JS components for large-system devices in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.PREVIEW_BUILD={name:"PreviewBuild",description:"Build preview in the stage model.",group:TaskGroupType.HOOK_TASK_GROUP},a.HOT_RELOAD_BUILD={name:"HotReloadBuild",description:"Build in hot reload mode.",group:TaskGroupType.HOOK_TASK_GROUP},a.UNIT_TEST_BUILD={name:"UnitTestBuild",description:"Build a unit test.",group:TaskGroupType.HOOK_TASK_GROUP},a.TEST={name:"test",description:"Build a unit test without DevEco Studio",group:TaskGroupType.HOOK_TASK_GROUP},a.ON_DEVICE_TEST={name:"onDeviceTest",description:"Build a device test without DevEco Studio",group:TaskGroupType.HOOK_TASK_GROUP},a.GENERATE_UNIT_TEST_TEMPLATE={name:"GenerateUnitTestTemplate",description:"Building a unit test template without DevEco Studio",group:TaskGroupType.GENERATE_TASK_GROUP},a.GENERATE_OHOS_TEST_TEMPLATE={name:"GenerateOhosTestTemplate",description:"Building a ohosTest template without DevEco Studio",group:TaskGroupType.GENERATE_TASK_GROUP},a.GENERATE_UNIT_TEST_RESULT={name:"GenerateUnitTestResult",description:"Building a unit test result without DevEco Studio",group:TaskGroupType.GENERATE_TASK_GROUP},a.BUILD_UNIT_TEST_RES={name:"BuildUnitTestHook",description:"Build a unit test hook.",group:TaskGroupType.HOOK_TASK_GROUP},a.PROCESS_RESOURCE={name:"ProcessResource",description:"Process resources in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.PREVIEW_PROCESS_RESOURCE={name:"PreviewProcessResource",description:"Process preview resources incrementally in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.PRE_BUILD={name:"PreBuild",description:"Pre-build in the stage model.",group:TaskGroupType.VERIFICATION_TASK_GROUP},a.COMPILE_NODE={name:"Build",description:"Compile ArkTS or JS components using Node.js for large-system devices in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.OHOS_TEST_COMPILE_NODE={name:"OhosTestBuild",description:"Compile ArkTS or JS components using Node.js for large-system devices in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.OHOS_TEST_ARK_COMPILE={name:"OhosTestCompile",description:"Compile ArkTS or JS components using Node.js for large-system devices in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.COMPILE_RESOURCE={name:"CompileResource",description:"Compile project resources in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.PREVIEW_COMPILE_RESOURCE={name:"PreviewCompileResource",description:"Use Preview to compile project resources in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.MAKE_PACK_INFO={name:"MakePackInfo",description:"Generate module pack.info in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.MAKE_PROJECT_PACK_INFO={name:"MakeProjectPackInfo",description:"Generate project pack.info in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.MERGE_PROFILE={name:"MergeProfile",description:"Merge app config manifest files in the stage model.",group:TaskGroupType.CONFIG_TASK_GROUP},a.BUILD_NATIVE_WITH_CMAKE={name:"BuildNativeWithCmake",description:"Compile CPP source with CMake in the stage model.",group:TaskGroupType.NATIVE_TASK_GROUP},a.PACKAGE_HAP={name:"PackageHap",description:"Build the HAP package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.PACKAGE_HSP={name:"PackageHsp",description:"Build the HSP package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.GENERATE_PKG_MODULE_JSON={name:"GeneratePkgModuleJson",description:"Generate the module.json in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.PROCESS_PROFILE={name:"ProcessProfile",description:"Process app config manifest files in the stage model.",group:TaskGroupType.CONFIG_TASK_GROUP},a.GeneratePackRes={name:"GeneratePackRes",description:"Build the pack.res file in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PACKAGE_APP={name:"PackageApp",description:"Build the app package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.BUILD_NATIVE_WITH_NINJA={name:"BuildNativeWithNinja",description:"Compile CPP source with Ninja in the stage model.",group:TaskGroupType.NATIVE_TASK_GROUP},a.GENERATE_LOADER_JSON={name:"GenerateLoaderJson",description:"Generate loader.json in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.MERGE_RESOURCE={name:"MergeResource",description:"Merge resources in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.PACKAGE_HAR={name:"PackageHar",description:"Build the HAR package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.PROCESS_PACKAGE_JSON={name:"ProcessPackageJson",description:"Process HAR package.json in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PROCESS_OH_PACKAGE_JSON={name:"ProcessOHPackageJson",description:"Process HAR package.json in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PROCESS_LIB={name:"ProcessLibs",description:"Process .so files in the stage model.",group:TaskGroupType.RESOURCES_TASK_GROUP},a.DO_NATIVE_STRIP={name:"DoNativeStrip",description:"Strip .so files to decrease size.",group:TaskGroupType.NATIVE_TASK_GROUP},a.CACHE_NATIVE_LIBS={name:"CacheNativeLibs",description:"cache native strip .so fileInfo",group:TaskGroupType.NATIVE_TASK_GROUP},a.CONFIGURE_CMAKE={name:"ConfigureCmake",description:"cache native strip .so fileInfo",group:TaskGroupType.NATIVE_TASK_GROUP},a.SYSCAP_TRANSFORM={name:"SyscapTransform",description:"Transform SysCap in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PACKAGE_SHARED_HAR={name:"PackageSharedHar",description:"Build the shared HAR package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.PREPARE_SHARED_HAR_RES={name:"PrepareSharedHarResource",description:"Prepare resources for the shared HAR package in the stage model.",group:TaskGroupType.CONFIG_TASK_GROUP},a.PACKAGE_SHARED_TGZ={name:"PackageSharedTgz",description:"Build the shared HAR and HSP files into a TGZ package in the stage model.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.GENERATE_METADATA={name:"GenerateMetadata",description:"Generate metadata in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PREVIEW={name:"Preview",description:"Compile ArkTS components on preview in the stage model.",group:TaskGroupType.GENERATE_TASK_GROUP},a.UNIT_TEST={name:"UnitTest",description:"Compile ArkTS components at unit test time in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.HOT_RELOAD={name:"HotReload",description:"Compile ArkTS components during hot loading in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.COLD_RELOAD={name:"ColdReload",description:"Compile ArkTS components during cold loading in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.HAR_COMPILE={name:"HarCompile",description:"Compile ArkTS components for packaged HAR files in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.HAR_BUILD={name:"HarBuild",description:"Build ArkTS components for packaged HAR files in the stage model.",group:TaskGroupType.ARKTS_TASK_GROUP},a.OHOS_TEST_COPY_MOCK_CONFIG_JSON={name:"OhosTestCopyMockConfigJson",description:"Copy mock config json to hap resources.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP},a.LINT={name:"Lint",description:"Lint ArkTS for HAR files.",group:TaskGroupType.ARKTS_TASK_GROUP},a.PREPARE_QUICKFIX={name:"PrepareQuickfix",description:"Prepare changed assets for quickfix.",group:TaskGroupType.GENERATE_TASK_GROUP},a.PACKAGE_HQF={name:"PackageHqf",description:"Preform quickfix hqf packaging.",group:TaskGroupType.PACKAGE_TASK_GROUP},a.SIGN_HQF={name:"SignHqf",description:"Signing for quickfix hqf package.",group:TaskGroupType.SIGN_TASK_GROUP},a.PROCESS_ROUTER_MAP={name:"ProcessRouterMap",description:"Process router map configuration.",group:TaskGroupType.GENERATE_TASK_GROUP},a.GENERATE_DEVICE_COVERAGE={name:"GenerateDeviceCoverage",description:"Generate ohos test coverage report.",group:TaskGroupType.GENERATE_TASK_GROUP},a.BEFORE_GENERATE_DEVICE_COVERAGE={name:"BeforeGenerateDeviceCoverage",description:"Generate ohos test coverage report prerequisites.",group:TaskGroupType.GENERATE_TASK_GROUP},a.GENERATE_PKG_CONTEXT_INFO={name:"GeneratePkgContextInfo",description:"Generate pkgContextInfo.json to ets-loader.",group:TaskGroupType.GENERATE_TASK_GROUP},e.Task=a;class p{}p.PRE_BUILD_APP={name:"PreBuildApp",description:"Prepare before building the app.",group:TaskGroupType.VERIFICATION_TASK_GROUP},p.DUPLICATE_DEPENDENCY_CHECK={name:"DuplicateDependencyCheck",description:"Check duplicated dependencies when building app.",group:TaskGroupType.VERIFICATION_TASK_GROUP},p.SIGN_HAP={name:"SignHap",description:"Sign the HAP package.",group:TaskGroupType.SIGN_TASK_GROUP},p.SIGN_HSP={name:"SignHsp",description:"Sign the HAP package.",group:TaskGroupType.SIGN_TASK_GROUP},p.PACKAGE_SIGN_HAR={name:"PackageSignHar",description:"Package and sign the HAR package.",group:TaskGroupType.SIGN_TASK_GROUP},p.SIGN_MODULE_REMOTE_HSP={name:"SignModuleRemoteHsp",description:"Sign the module-level remote HSP package.",group:TaskGroupType.SIGN_TASK_GROUP},p.PROCESS_INTEGRATED_HSP={name:"ProcessIntegratedHsp",description:"Use package tool process integrated hsp.",group:TaskGroupType.SIGN_TASK_GROUP},p.SIGN_PROJECT_REMOTE_HSP={name:"SignProjectRemoteHsp",description:"Sign the project-level remote HSP package.",group:TaskGroupType.SIGN_TASK_GROUP},p.SIGN_APP={name:"SignApp",description:"Sign the app package.",group:TaskGroupType.SIGN_TASK_GROUP},p.VALIDATE_SIGNING={name:"ValidateSigning",description:"Verify the signature configuration.",group:TaskGroupType.VERIFICATION_TASK_GROUP},p.CLEAN={name:"clean",description:"Clear the cache information.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP},p.REPLACE_PREVIEWER_PAGES={name:"ReplacePreviewerPage",description:"Accept previewer arguments, then use them to replace the ones in the page file.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP},p.COPY_PREVIEWER_PROFILE={name:"CopyPreviewProfile",description:"Copy preview profile.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP},p.LEGACY_HOOK_COMPILE_RESOURCE={name:"LegacyHookCompileResource",description:"Add a hook task for compiling resources.",group:TaskGroupType.HOOK_TASK_GROUP},p.PREVIEW_HOOK_COMPILE_RESOURCE={name:"PreviewHookCompileResource",description:"Add a hook task for compiling preview resources.",group:TaskGroupType.HOOK_TASK_GROUP},p.PRE_CHECK_SYSCAP={name:"PreCheckSyscap",description:"Pre-check SysCap.",group:TaskGroupType.VERIFICATION_TASK_GROUP},p.REPLACE_UNIT_TEST_INDEX_FILE={name:"ReplaceUnitTestIndexFile",description:"Replace the index file in unit tests.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP},p.UNIT_TEST_PROCESS_PROFILE={name:"UnitTestProcessProfile",description:"Add the entry TestAbility to the profile file during unit test building.",group:TaskGroupType.CONFIG_TASK_GROUP},p.CREATE_BUILD_PROFILE={name:"CreateBuildProfile",description:"Create the BuildProfile.ets file for the HAP/HSP package.",group:TaskGroupType.GENERATE_TASK_GROUP},p.CREATE_HAR_BUILD_PROFILE={name:"CreateHarBuildProfile",description:"Create the BuildProfile.ets file for the HAR package.",group:TaskGroupType.GENERATE_TASK_GROUP},p.COLLECT_COVERAGE={name:"collectCoverage",description:"Generate coverage statistics reports based on instrumentation dotting data.",group:core_task_js_1.HvigorTaskGroupType.OTHER_TASK_GROUP,isEnabled:!0},e.CommonTask=p;class i{}i.BUILD_PREVIEWER_RES={name:"buildPreviewerResource",description:"Build the preview resources.",group:TaskGroupType.HOOK_TASK_GROUP},i.BUILD_HOT_RELOAD_RES={name:"buildHotReloadResource",description:"Build the hot reload resources.",group:TaskGroupType.HOOK_TASK_GROUP},i.ASSEMBLE_APP={name:"assembleApp",description:"Assemble the task for the packaged app.",group:TaskGroupType.HOOK_TASK_GROUP},i.ASSEMBLE_HAP={name:"assembleHap",description:"Assemble the task for the packaged HAP file.",group:TaskGroupType.HOOK_TASK_GROUP},i.GEN_ON_DEVICE_TEST_HAP={name:"genOnDeviceTestHap",description:"Assemble the task for the packaged HAP file in HSP or HAR.",group:TaskGroupType.HOOK_TASK_GROUP},i.ASSEMBLE_HSP={name:"assembleHsp",description:"Assemble the task for the packaged HSP file.",group:TaskGroupType.HOOK_TASK_GROUP},i.ASSEMBLE_HAR={name:"assembleHar",description:"Assemble the task for the packaged HAR file.",group:TaskGroupType.HOOK_TASK_GROUP},i.ASSEMBLE_HQF={name:"assembleDevHqf",description:"Assemble the task for the packaged HQF file.",group:TaskGroupType.HOOK_TASK_GROUP},i.COMPILE_NATIVE={name:"compileNative",description:"Compile the hook task for native resources.",group:TaskGroupType.HOOK_TASK_GROUP},i.GENERATE_BUILD_PROFILE={name:"GenerateBuildProfile",description:"Create build profile hook task.",group:TaskGroupType.HOOK_TASK_GROUP},e.CommonHookTask=i;e.SyncTask=class{static syncTaskName(e){return"init"}};class T{}T.TRANSFORM_SHELL_CLASSES={name:`Transform${r}Classes`,description:`Transform classes into ${r} .`},T.SIGN_SHELL={name:`Sign${r}`,description:`Sign files into ${r}.`},T.GENERATE_SHELL_MANIFEST={name:`Generate${r}Manifest`,description:`Generate manifest in ${r}.`},T.PACK_SHELL={name:`Pack${r}`,description:`Pack dex and res into ${r}`},T.COMPILE_SHELL_JAVA_WITH_JAVAC={name:`Compile${r}JavaWithJavac`,description:`Compile Java with Javac into ${r}.`},T.COMPILE_SHELL_RESOURCES={name:`Compile${r}Resource`,description:`Compile resource in ${r}.`},T.GENERATE_SHELL_JAVA_FILES={name:`Generate${r}JavaFiles`,description:`Generate Java files in ${r}.`},T.GENERATE_SHELL_RESOURCES={name:`Generate${r}Resource`,description:`Generate resource in ${r}.`},e.ShellTask=T}(TaskNames=exports.TaskNames||(exports.TaskNames={}));