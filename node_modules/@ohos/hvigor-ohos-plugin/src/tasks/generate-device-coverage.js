"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GenerateDeviceCoverage=void 0;const hvigor_1=require("@ohos/hvigor"),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),build_directory_const_js_1=require("../const/build-directory-const.js"),common_const_js_1=require("../const/common-const.js"),module_type_enum_js_1=require("../enum/module-type-enum.js"),dependency_manager_js_1=require("../project/dependency/dependency-manager.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),remote_hsp_utils_js_1=require("../utils/remote-hsp-utils.js"),task_names_js_1=require("./common/task-names.js"),ohos_hap_task_js_1=require("./task/ohos-hap-task.js"),device_coverage_queue_center_js_1=require("./device-coverage-queue-center.js");class GenerateDeviceCoverage extends ohos_hap_task_js_1.OhosHapTask{constructor(e){super(e,task_names_js_1.TaskNames.Task.GENERATE_DEVICE_COVERAGE),this._log=ohos_logger_js_1.OhosLogger.getLogger(GenerateDeviceCoverage.name)}async doTaskAction(){var e,t;if(this.targetData.getTargetName()===common_const_js_1.CommonConst.OHOS_TEST)return;this.targetService.getModuleService().findTargetDataByName(common_const_js_1.DefaultTargetConst.OHOS_TEST_TARGET)||this._log._buildError(`The module ${this.moduleModel.getName()} does not exist ohosTest target, Failed to execute the command ${common_const_js_1.CommonConst.ON_DEVICE_TEST}.`)._printErrorAndExit();const o=path_1.default.resolve(path_1.default.resolve(this.moduleModel.getProjectDir(),build_directory_const_js_1.BuildDirConst.SRC),common_const_js_1.DefaultTargetConst.OHOS_TEST_TARGET);fs_extra_1.default.existsSync(o)||this._log._buildError(`The path ${o} does not exist, Failed to execute the command ${common_const_js_1.CommonConst.ON_DEVICE_TEST}.`)._printErrorAndExit();const s=(0,remote_hsp_utils_js_1.getSignRemoteHspMetadata)(this.targetService);let r=[];s&&(r=s.map((e=>e.hspPath)));const a=this.service.getProjectModel().getProjectDir(),_=this.moduleModel.getModule().getNodeDir(),i=path_1.default.resolve(a,_,`src/ohosTest/${common_const_js_1.CommonConst.MODULE_JSON5}`);fs_extra_1.default.existsSync(i)||this._log._buildError(`The file ${i} is not exist.`)._printErrorAndExit();const n=hvigor_1.Json5Reader.getJson5Obj(i),u={toolchainsPath:this.sdkInfo.getBasePath(),projectPath:this.projectModel.getProjectDir(),modulePath:this.pathInfo.getModulePath(),bundleName:null!==(e=this.targetData.getProduct().bundleName)&&void 0!==e?e:this.projectModel.getDefaultBundleName(),coverage:"true"===hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.OHOS_TEST_COVERAGE),logger:this._log,scope:null!==(t=hvigor_1.hvigorCore.getExtraConfig().get(common_const_js_1.CommonConst.OHOS_TEST_COVERAGE_SCOPE))&&void 0!==t?t:"",testModuleName:n.module.name,targetHapPath:this.getOutputPackagePath(),testHapPath:path_1.default.resolve(this.pathInfo.getModuleBuildOhosTestOutputPath(),this.targetData.getModuleTargetOutputFileName("",!0,build_directory_const_js_1.BuildArtifactExtension.DOT_HAP,"","ohosTest")),dependenciesPaths:[...this.getDependenciesPaths(),...r].reverse()};await device_coverage_queue_center_js_1.deviceCoverageQueueCenter.executeProxy(u)}getOutputPackagePath(){var e;if(this.service.getModuleModel().getModuleType()===module_type_enum_js_1.ModuleType.Shared)return path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),this.targetData.getModuleTargetOutputFileName(this.targetName,!0,build_directory_const_js_1.BuildArtifactExtension.DOT_HSP));if(this.service.getModuleModel().getModuleType()===module_type_enum_js_1.ModuleType.Entry||this.service.getModuleModel().getModuleType()===module_type_enum_js_1.ModuleType.Feature)return path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),this.targetData.getModuleTargetOutputFileName(this.targetName,!0,build_directory_const_js_1.BuildArtifactExtension.DOT_HAP));{const t=null===(e=this.targetData.getTargetOpt().output)||void 0===e?void 0:e.artifactName,o=t?`${t}`:`${this.moduleName}`;return path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),`${o}.har`)}}initTaskDepends(){}getDependenciesPaths(){const e=new Set;return new dependency_manager_js_1.DependencyManager(!1,this.moduleModel,this.projectModel).collectAllHspDependencies().forEach((t=>{const o=t[0];for(const t of[this.targetService.getTargetData().getTargetName(),common_const_js_1.DefaultTargetConst.DEFAULT_TARGET]){const s=this.targetService.getTargetData().findTargetDataByName(o,t);void 0!==s&&e.add(path_1.default.resolve(s.getPathInfo().getModuleBuildOutputPath(),s.getModuleTargetOutputFileName("",!0,build_directory_const_js_1.BuildArtifactExtension.DOT_HSP)))}})),Array.from(e)}}exports.GenerateDeviceCoverage=GenerateDeviceCoverage;