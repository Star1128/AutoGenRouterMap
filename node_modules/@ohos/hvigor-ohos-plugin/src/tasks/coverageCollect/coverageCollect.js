"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CoverageCollect=void 0;const hvigor_1=require("@ohos/hvigor"),hvigor_arkts_compose_1=require("@ohos/hvigor-arkts-compose"),coverageCollect_const_js_1=require("../../const/coverageCollect-const.js"),task_names_js_1=require("../common/task-names.js");var task=task_names_js_1.TaskNames.CommonTask;const LOG=hvigor_1.HvigorLogger.getLogger("coverageCollect"),PROJECT_PATH=coverageCollect_const_js_1.coverageCollectConst.PROJECT_PATH,REPORT_PATH=coverageCollect_const_js_1.coverageCollectConst.REPORT_PATH,COVERAGE_FILE=coverageCollect_const_js_1.coverageCollectConst.COVERAGE_FILE;class CoverageCollect extends hvigor_1.DefaultTask{constructor(e,o){super(e,task.COLLECT_COVERAGE),this._taskService=o,this.projectPath=hvigor_1.hvigorCore.getExtraConfig().get(PROJECT_PATH),this.reportPath=hvigor_1.hvigorCore.getExtraConfig().get(REPORT_PATH),this.coverageFile=hvigor_1.hvigorCore.getExtraConfig().get(COVERAGE_FILE)}registryAction(){return async()=>{LOG.info("Generate coverage statistics reports based on instrumentation dotting data"),await(0,hvigor_arkts_compose_1.generateReport)(this.projectPath,this.reportPath,this.coverageFile)}}}exports.CoverageCollect=CoverageCollect;