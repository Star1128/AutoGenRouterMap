"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.LegacyGenLiteSource=void 0;const wdk_1=require("@baize/wdk"),hvigor_1=require("@ohos/hvigor"),fs_1=__importDefault(require("fs")),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),util_1=__importDefault(require("util")),packing_tool_options_js_1=require("../../builder/inner-java-command-builder/packing-tool-options.js"),build_directory_const_js_1=require("../../const/build-directory-const.js"),common_const_js_1=require("../../const/common-const.js"),device_type_const_js_1=require("../../const/device-type-const.js"),file_util_js_1=require("../../utils/file-util.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),process_utils_js_1=require("../../utils/process-utils.js"),task_names_js_1=require("../common/task-names.js"),module_task_service_js_1=require("../service/module-task-service.js"),ohos_hap_task_js_1=require("../task/ohos-hap-task.js"),legacy_syscap_transform_js_1=require("./legacy-syscap-transform.js");class LegacyGenLiteSource extends ohos_hap_task_js_1.OhosHapTask{constructor(e){super(e,task_names_js_1.TaskNames.LegacyFATask.GENERATE_LITE_CODE),this._logger=ohos_logger_js_1.OhosLogger.getLogger(LegacyGenLiteSource.name)}initTaskDepends(){var e;this.declareDepends("LegacyCompileLiteJS"),this.syscapJsonPath=path_1.default.resolve(null===(e=this.moduleModel)||void 0===e?void 0:e.getSourceRootByTargetName(this.targetName),common_const_js_1.CommonConst.SYSCAP_JSON),fs_1.default.existsSync(this.syscapJsonPath)&&this.declareDepends(legacy_syscap_transform_js_1.LegacySyscapTransform.name)}async doTaskAction(){const e=this.service.getRelatedEntryModules(),t=this.service.getModuleModel().getModuleType();if(module_task_service_js_1.ModuleTaskService.checkEntryModules(t,e))for(const t of e)await this.genLiteSource(t);else await this.genLiteSource()}async genLiteSource(e=""){const t=this.pathInfo,s=path_1.default.resolve(t.getIntermediatesLiteSource(),"assets"),o=t.getInterMediatesLoaderOutLitePath();await fs_extra_1.default.copy(o,s);const a=path_1.default.resolve(t.getIntermediatesRes(),e,"config.json"),i=path_1.default.resolve(t.getIntermediatesLiteSource(),e,"config.json");if(await fs_extra_1.default.ensureDir(path_1.default.resolve(t.getIntermediatesLiteSource(),e)),this.targetData.isSingleDeviceTypeTarget())await fs_extra_1.default.copyFile(a,i);else{const e=this.targetData.getTargetDeviceType().filter((e=>device_type_const_js_1.DeviceTypeConst.LITE_DEVICES.includes(e))),t=fs_extra_1.default.readJsonSync(a);t.module.deviceType=e,await fs_extra_1.default.outputJSON(i,t)}const r=path_1.default.resolve(t.getIntermediatesRes(),e,build_directory_const_js_1.BuildDirConst.RESTOOL_BUILD_RESOURCES),_=path_1.default.resolve(s,this.module.getName(),e,build_directory_const_js_1.BuildDirConst.RESTOOL_BUILD_RESOURCES);await fs_extra_1.default.ensureDir(path_1.default.resolve(s,this.module.getName(),e)),await fs_extra_1.default.copy(r,_),await fs_extra_1.default.copy(t.getIntermediatesLiteBinSource(),_);const n=path_1.default.resolve(t.getIntermediatesRes(),e,"resources.index"),u=path_1.default.resolve(s,this.module.getName(),e,"resources.index");await fs_extra_1.default.ensureDir(path_1.default.resolve(s,this.module.getName(),e)),await fs_extra_1.default.copyFile(n,u);const c=path_1.default.resolve(t.getIntermediatesSysCap(),common_const_js_1.CommonConst.RPCID_SC),l=path_1.default.resolve(t.getIntermediatesLiteSource(),e,common_const_js_1.CommonConst.RPCID_SC);fs_extra_1.default.existsSync(c)&&await fs_extra_1.default.copyFile(c,l);const d=this.targetService.getTargetData();if(this.targetService.needPackBin(d)){const e="generate BIN packaging command",s=this.durationEvent.createSubEvent(e,"");s.start();const o=new packing_tool_options_js_1.PackingToolOptions;o.addCalledJarFile(this.sdkInfo.getHapTobin()),o.addProjectPath(t.getIntermediatesLiteSource()).addBinPath(path_1.default.resolve(t.getModuleBinOutput(),this.targetData.getModuleTargetOutputFileName("",!1,build_directory_const_js_1.BuildArtifactExtension.DOT_BIN))),hvigor_1.MetricFactory.createLogEvent(util_1.default.format(o.build()),hvigor_1.MetricLogType.DEBUG),this._logger.debug(o.build()),file_util_js_1.FileUtil.checkDirWithoutDelete(t.getModuleBinOutput());const a={moduleName:this.moduleName,commandLine:o.build()};s.stop(),s.setLog(e,hvigor_1.MetricLogType.INFO);const i="submit BIN packaging task to work pool",r=this.durationEvent.createSubEvent(i,"");r.start(),await new process_utils_js_1.ProcessUtils(a.moduleName).submitExecutionWithoutReturn(this,this.getWorkerPool(),a,wdk_1.noop,[],r),r.stop(),r.setLog(i,hvigor_1.MetricLogType.INFO)}}async beforeTask(){await fs_extra_1.default.emptydir(this.pathInfo.getIntermediatesLiteSource())}}exports.LegacyGenLiteSource=LegacyGenLiteSource;