"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractSyscapTransform=void 0;const wdk_1=require("@baize/wdk"),hvigor_1=require("@ohos/hvigor"),fs_1=__importDefault(require("fs")),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),common_const_js_1=require("../../const/common-const.js"),array_util_js_1=require("../../utils/array-util.js"),file_util_js_1=require("../../utils/file-util.js"),json_util_js_1=require("../../utils/json-util.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),process_utils_js_1=require("../../utils/process-utils.js"),pre_check_syscap_js_1=require("../pre-check-syscap.js"),ohos_hap_task_js_1=require("../task/ohos-hap-task.js");class AbstractSyscapTransform extends ohos_hap_task_js_1.OhosHapTask{constructor(t,e){var s;super(t,e),this._log=ohos_logger_js_1.OhosLogger.getLogger(AbstractSyscapTransform.name);const o=t.getTargetData().getTargetName();this.sourceRoot=null===(s=this.service.getModuleModel())||void 0===s?void 0:s.getSourceRootByTargetName(o),this.pathInfo=this.targetService.getTargetData().getPathInfo(),this.sysCapJsonPath=path_1.default.resolve(this.sourceRoot,common_const_js_1.CommonConst.SYSCAP_JSON),this.rpcidScPath=path_1.default.resolve(this.pathInfo.getIntermediatesSysCap(),common_const_js_1.CommonConst.RPCID_SC)}declareInputFiles(){const t=new hvigor_1.FileSet;return fs_1.default.existsSync(this.sdkInfo.getSysCapTool())&&t.addEntry(this.sdkInfo.getSysCapTool()),fs_1.default.existsSync(this.getSysCapPath())&&t.addEntry(this.getSysCapPath()),fs_1.default.existsSync(path_1.default.resolve(this.sourceRoot,common_const_js_1.CommonConst.SYSCAP_JSON))&&t.addEntry(this.sysCapJsonPath),t}declareInputs(){const t=super.declareInputs(),e=this.getJsonProfileByModel();return t.set(common_const_js_1.CommonConst.DEVICE_TYPES,e.deviceTypes),t}declareOutputFiles(){return(new hvigor_1.FileSet).addEntry(this.rpcidScPath)}initTaskDepends(){this.declareDepends(pre_check_syscap_js_1.PreCheckSyscap.name)}async doTaskAction(){if(this.targetData.isHarmonyOS())return;const t="generate SysCap transform command",e=this.durationEvent.createSubEvent(t,"");e.start();const s=this.getJsonProfileByModel();let o=new Set;const r=s.deviceTypes,n=this.getIntersectedGeneralSysCapSet(r);if(fs_extra_1.default.existsSync(this.sysCapJsonPath)){const t=(0,json_util_js_1.getJson5Obj)(this.sysCapJsonPath),e=t.devices.custom,s=this.getIntersectedCustomSysCapSet(e);0===r.length?(this.checkCustomSysCapList(e),o=s):o=e&&0!==e.length?(0,array_util_js_1.getIntersectedSet)(s,n):n;const i=t.production;i&&this.processProductionSysCap(i,o)}if(fs_extra_1.default.existsSync(this.sysCapJsonPath)||(o=n),this.moduleModel.isHarModule())return e.stop(),void e.setLog(t,hvigor_1.MetricLogType.INFO);(null==o?void 0:o.size)||this._log._buildError("The intersection of the system capability sets configured for multiple devices is empty.")._detail(`Invalid configuration in ${common_const_js_1.CommonConst.SYSCAP_JSON} file or unable to find the systemCapability set corresponding to the deviceType which defined in the '${this.moduleName}' ${common_const_js_1.CommonConst.MODULE_JSON5}.`)._file(fs_extra_1.default.existsSync(this.sysCapJsonPath)?this.sysCapJsonPath:this.targetData.getModuleSourceSetModel().getModuleTargetRes().getJsonPath())._printErrorAndExit();const i=new Map;i.set(common_const_js_1.CommonConst.API_VERSION,this.compileApiVersion),i.set(common_const_js_1.CommonConst.SYSTEM_CAPABILITY,Array.from(o));const a=this.pathInfo.getIntermediatesSysCap();file_util_js_1.FileUtil.checkDirWithoutDelete(a);const _=path_1.default.resolve(a,common_const_js_1.CommonConst.RPCID_JSON);fs_extra_1.default.outputJsonSync(_,Object.fromEntries(i));const c={moduleName:this.moduleName,taskName:this.name,commandLine:[this.sdkInfo.getSysCapTool(),"-R","-e","-i",_,"-o",a]};e.stop(),e.setLog(t,hvigor_1.MetricLogType.INFO);const h="submit SysCap transform task to work pool",l=this.durationEvent.createSubEvent(h,"");l.start(),await new process_utils_js_1.ProcessUtils(c.moduleName,c.taskName).submitExecutionWithoutReturn(this,this.getWorkerPool(),c,wdk_1.noop,[],l),l.stop(),l.setLog(h,hvigor_1.MetricLogType.INFO)}getSysCapPath(){return fs_1.default.existsSync(this.sdkInfo.getSdkJsDir())&&!fs_1.default.existsSync(this.sdkInfo.getSdkEtsDir())?this.sdkInfo.getSysCapFileInJs():this.sdkInfo.getSysCapFileInEts()}getIntersectedGeneralSysCapSet(t){var e;if(!(null==t?void 0:t.length))return new Set;if(1===t.length)return null!==(e=this.getSysCapSetFromSdk(t[0],this.getSysCapPath()))&&void 0!==e?e:new Set;const s=Array.from(t.map((t=>{var e;return Array.from(null!==(e=this.getSysCapSetFromSdk(t,this.getSysCapPath()))&&void 0!==e?e:new Set)})).reduce(((t,e)=>t.filter((t=>e.includes(t))))));return new Set(s)}getSysCapSetFromSdk(t,e){const s=path_1.default.resolve(e,`${t}.json`);if(!fs_extra_1.default.existsSync(s))return void this._log.warn(`The systemCapability set corresponding to the '${t}' is not found in the '${e}'.`);const o=new Set;return(0,json_util_js_1.getJson5Obj)(s).SysCaps.forEach((t=>{o.add(t)})),o}getIntersectedCustomSysCapSet(t){if(!(null==t?void 0:t.length)||t.some((t=>"{}"===JSON.stringify(t))))return new Set;const e=[];return t.forEach((t=>{Object.keys(t).forEach((s=>{e.push(t[s])}))})),new Set((0,wdk_1.intersection)(...e))}processProductionSysCap(t,e){const s=t.addedSysCaps;s&&s.forEach((t=>{e.add(t)}));const o=t.removedSysCaps;o&&o.forEach((t=>{e.delete(t)}))}checkCustomSysCapList(t){t&&0!==t.length||this._log._buildError(`The device type defined in the ${common_const_js_1.CommonConst.MODULE_JSON5} of the module '${this.moduleName}' is empty, and the general and custom fields in the ${common_const_js_1.CommonConst.SYSCAP_JSON} file are not specified or their values are empty.`)._detail(`Check the ${common_const_js_1.CommonConst.MODULE_JSON5} or ${common_const_js_1.CommonConst.SYSCAP_JSON} file of the module '${this.moduleName}'.`)._file(this.sysCapJsonPath)._printErrorAndExit()}}exports.AbstractSyscapTransform=AbstractSyscapTransform;