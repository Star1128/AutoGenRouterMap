"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DefaultTaskSnapshot=void 0;const hash_util_js_1=require("../../../../common/util/hash-util.js"),cache_util_js_1=require("../../cache/util/cache-util.js"),task_built_in_js_1=require("../util/task-built-in.js"),task_input_value_entry_js_1=require("../util/task-input-value-entry.js");var snapshotSerializationReplacer=task_built_in_js_1.TaskBuiltIn.snapshotSerializationReplacer;const wdk_1=require("@baize/wdk");class DefaultTaskSnapshot{constructor(e){this._inputs=[],this._successful=!1;const t=e.getNode();this._projectName=t.getProject().getName(),this._moduleName=t.getName(),this._taskName=e.getName(),this._key=(0,cache_util_js_1.getTaskSnapCacheEntryUniqueKey)(this._taskName,t),this._executionId=`${this._key}:${Date.now()}`,e.declareInputs().forEach(((e,t)=>this.addInput(t,e))),this._inputFiles=e.declareInputFiles().collect(),this._outputFiles=e.declareOutputFiles().collect()}getKey(){return this._key}compareTo(e){return this._successful&&this._projectName===e.getProjectName()&&this._moduleName===e.getModuleName()&&this._taskName===e.getTaskName()&&this.compareInputs(e)&&this.compareInputFiles(e)&&this.compareOutputFiles(e)}updateFilesOptions(e){this._inputFiles.forEach(((t,s)=>{var i;t.fileSnapShotHashValue=null===(i=e.currentFileSnapShotCacheService.get(s))||void 0===i?void 0:i.hashValue})),this._outputFiles.forEach(((t,s)=>{var i;t.fileSnapShotHashValue=null===(i=e.currentFileSnapShotCacheService.get(s))||void 0===i?void 0:i.hashValue}))}updateCacheFilesOptions(e){this._inputFiles.forEach(((t,s)=>{var i;t.fileSnapShotHashValue=null===(i=e.fileSnapShotCacheService.get(s))||void 0===i?void 0:i.hashValue})),this._outputFiles.forEach(((t,s)=>{var i;t.fileSnapShotHashValue=null===(i=e.fileSnapShotCacheService.get(s))||void 0===i?void 0:i.hashValue}))}getModuleName(){return this._moduleName}getTaskName(){return this._taskName}getProjectName(){return this._projectName}isSuccessful(){return this._successful}setExecutedSuccessful(){this._successful=!0}addInput(e,t){const s=this._inputs.findIndex((t=>t.getName()===e));s<0||this._inputs.splice(s,1),this._inputs.push(new task_input_value_entry_js_1.ValueEntry(e,t))}getInputs(){return this._inputs}getExecutionId(){return this._executionId}compareInputs(e){const t=e.getInputs();if(this._inputs.length!==t.length)return!1;const s=(e,t)=>e.getName()>t.getName()?1:t.getName()>e.getName()?-1:0;let i=(0,hash_util_js_1.createHash)();this._inputs.sort(s).forEach((e=>i.update(e.getHash())));const a=i.digest("hex");i=(0,hash_util_js_1.createHash)(),e.getInputs().sort(s).forEach((e=>i.update(e.getHash())));return a===i.digest("hex")}compareInputFiles(e){return DefaultTaskSnapshot.compareFiles(this._inputFiles,e.getInputFiles())}compareOutputFiles(e){return DefaultTaskSnapshot.compareFiles(this._outputFiles,e.getOutputFiles())}static compareFiles(e,t){if(e.size!==t.size)return!1;for(const[s,i]of e){if(!t.has(s))return!1;const e=t.get(s);if(!(0,wdk_1.isEqual)(i,e))return!1}return!0}getInputFiles(){return this._inputFiles}getOutputFiles(){return this._outputFiles}stringify(){return JSON.stringify(this,snapshotSerializationReplacer)}}exports.DefaultTaskSnapshot=DefaultTaskSnapshot;