"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.doIncrementalTask=void 0;const hvigor_trace_js_1=require("../../common/trace/hvigor-trace.js"),hvigor_log_js_1=require("../../log/hvigor-log.js"),task_proxy_js_1=require("../task/proxy/task-proxy.js"),task_proxy_manager_js_1=require("../task/proxy/task-proxy-manager.js"),global_core_parameters_js_1=require("../data/global-core-parameters.js"),log=hvigor_log_js_1.HvigorLogger.getLogger("hvigor-incremental-task");async function doIncrementalTask(e){const r=e,a=task_proxy_manager_js_1.taskProxyManager.set(r.getPath(),new task_proxy_js_1.TaskProxy(r));if(await r.beforeAlwaysAction(),function(){if(!global_core_parameters_js_1.coreParameter.startParams.incrementalExecution)return!0;const r=e.taskExecutedStatus.unTrackStateReason;if(r)return log.debug(`${e.getPath()} will not track state,eg do incremental,because:${r}`),!0;return!1}())r.declareInputs(),r.declareInputFiles(),await a.execute();else{a.preExecute()?(r.taskExecutedStatus.setIsUpToDate(!0),hvigor_trace_js_1.hvigorTrace.hasIncremental=!0):await a.execute()}}exports.doIncrementalTask=doIncrementalTask;