"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClusterPriorityReadyQueue=void 0;const heap_js_1=require("../../../../common/util/heap.js"),task_state_js_1=require("../enum/task-state.js"),tcb_store_js_1=require("../store/tcb-store.js");class ClusterPriorityReadyQueue{constructor(e){this.heaps=new Map;for(let t=0;t<Math.floor(e);t++)this.heaps.set(t,new heap_js_1.Heap((function(e,t){return e.getPriority()-t.getPriority()})))}clear(){this.heaps.forEach((e=>e.clear()))}empty(){for(let e=0;e<this.heaps.size;e++)if(!this.heaps.get(e).empty())return!1;return!0}pop(){for(let e=0;e<this.heaps.size;e++){const t=this.heaps.get(e);if(!t.empty())return t.pop()}}push(e){var t,s;const r=e.getTargetWorkers();if(r)for(const s of r)null===(t=this.heaps.get(s))||void 0===t||t.push(e);else for(let t=0;t<this.heaps.size;t++)null===(s=this.heaps.get(t))||void 0===s||s.push(e)}update(e){for(let t=0;t<this.heaps.size;t++){this.heaps.get(t).update(e)}}getWorkHeap(e){return this.heaps.get(e)}getFirstWaitingWork(e){var t;const s=this.getWorkHeap(e);if(s)for(;!s.empty();){const e=s.pop();if((null===(t=tcb_store_js_1.TcbStore.getTCB(e.getId()))||void 0===t?void 0:t.getState())===task_state_js_1.TaskState.WAITING)return e}}pushWork(e,t){var s;null===(s=this.heaps.get(t))||void 0===s||s.push(e)}}exports.ClusterPriorityReadyQueue=ClusterPriorityReadyQueue;