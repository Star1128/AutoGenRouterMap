"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkerPoolDelegator=void 0;const worker_pool_factory_js_1=require("./worker-pool-factory.js");class WorkerPoolDelegator{constructor(){let o;this.workerPool=()=>(WorkerPoolDelegator.isActive=!0,null!=o?o:o=worker_pool_factory_js_1.WorkerPoolFactory.getDefaultWorkerPool())}warmUp(o){if(WorkerPoolDelegator.needWarmUp){const e=this.workerPool().getMinPoolNum();for(let r=0;r<e;r++)this.workerPool().warmUp(o);WorkerPoolDelegator.needWarmUp=!1}}submit(o,e,r){return this.workerPool().submit(o,e,r)}async terminate(){const o=await this.workerPool().terminate();return WorkerPoolDelegator.isActive=!o,o}getState(){return this.workerPool().getState()}setState(o){this.workerPool().setState(o)}setRecycleInterval(o){this.workerPool().setRecycleInterval(o)}setMaxIdleTime(o){this.workerPool().setMaxIdleTime(o)}setErrorCallback(o){this.workerPool().setErrorCallback(o)}getLog(o){return this.workerPool().getLog(o)}clearLog(o){this.workerPool().clearLog(o)}getMaxPoolNum(){return this.workerPool().getMaxPoolNum()}getMinPoolNum(){return this.workerPool().getMinPoolNum()}setResident(o){this.workerPool().setResident(o)}isActive(){return WorkerPoolDelegator.isActive}}exports.WorkerPoolDelegator=WorkerPoolDelegator,WorkerPoolDelegator.isActive=!1,WorkerPoolDelegator.needWarmUp=!1;