"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ProjectCacheService=void 0;const fs_1=__importDefault(require("fs")),path_1=__importDefault(require("path")),wrapper_const_js_1=require("../../../cli/wrapper/wrapper-const.js"),local_file_writer_js_1=require("../../../common/util/local-file-writer.js"),path_util_js_1=require("../../../common/util/path-util.js"),hvigor_log_js_1=require("../../log/hvigor-log.js"),meta_util_js_1=require("../../util/meta-util.js"),global_core_parameters_js_1=require("../data/global-core-parameters.js"),snapshot_generator_service_js_1=require("../snapshot/service/snapshot-generator-service.js"),task_proxy_manager_js_1=require("../task/proxy/task-proxy-manager.js"),filesnapshot_cache_service_js_1=require("./service/filesnapshot-cache-service.js"),tasksnapshot_cache_service_js_1=require("./service/tasksnapshot-cache-service.js"),cache_util_js_1=require("./util/cache-util.js"),logger=hvigor_log_js_1.HvigorLogger.getLogger("project-cache-service");class ProjectCacheService{constructor(e){this.projectName=e.getName(),this.projectNodeDir=e.getNodeDir(),this.projectTaskSnapShotCacheFilePath=this.getProjectTaskSnapShotCacheFilePath(),this.projectFileSnapShotCacheFilePath=this.getProjectFileSnapShotCacheFilePath(),this.taskSnapShotCacheService=new tasksnapshot_cache_service_js_1.TaskSnapShotCacheService(this.projectTaskSnapShotCacheFilePath),this.fileSnapShotCacheService=new filesnapshot_cache_service_js_1.FileSnapShotCacheService(this.projectFileSnapShotCacheFilePath),this.currentTaskSnapShotCacheService=new tasksnapshot_cache_service_js_1.TaskSnapShotCacheService(this.projectTaskSnapShotCacheFilePath),this.currentFileSnapShotCacheService=new filesnapshot_cache_service_js_1.FileSnapShotCacheService(this.projectFileSnapShotCacheFilePath)}getProjectFileSnapShotCacheFilePath(){return path_1.default.resolve(path_util_js_1.PathUtil.getHvigorCacheDir(logger),"./cache/file-cache.json")}getProjectTaskSnapShotCacheFilePath(){return path_1.default.resolve(path_util_js_1.PathUtil.getHvigorCacheDir(logger),"./cache/task-cache.json")}initialize(){this.checkMetaInfo(),this.taskSnapShotCacheService.initialize(),this.fileSnapShotCacheService.initialize(),this.currentTaskSnapShotCacheService.clone(this.taskSnapShotCacheService),this.currentFileSnapShotCacheService.clone(this.fileSnapShotCacheService)}getTaskSnapShot(e,t){return this.taskSnapShotCacheService.get((0,cache_util_js_1.getTaskSnapCacheEntryUniqueKey)(e,t))}getFileSnapShot(e){return this.fileSnapShotCacheService.get(e)}updateFileSnapShot(e,t){this.currentFileSnapShotCacheService.set(e,t)}updateTaskSnapShot(e,t){this.currentTaskSnapShotCacheService.set(e,t)}close(){if(ProjectCacheService.instance=void 0,global_core_parameters_js_1.coreParameter.startParams.incrementalExecution)try{task_proxy_manager_js_1.taskProxyManager.getAllIncrementalTaskProxy().forEach((e=>{e.postExecute()})),task_proxy_manager_js_1.taskProxyManager.reset();const e=snapshot_generator_service_js_1.SnapshotGeneratorService.getInstance().serializeTaskSnapshotCacheToJson(this.currentTaskSnapShotCacheService.getCacheEntryContentMap()),t=snapshot_generator_service_js_1.SnapshotGeneratorService.getInstance().serializeFileSystemSnapshotToJson(this.currentFileSnapShotCacheService.getCacheEntryContentMap());local_file_writer_js_1.LocalFileWriter.getInstance().writeStr(this.projectTaskSnapShotCacheFilePath,e),local_file_writer_js_1.LocalFileWriter.getInstance().writeStr(this.projectFileSnapShotCacheFilePath,t)}catch(e){}}static getInstance(e){return ProjectCacheService.instance||(ProjectCacheService.instance=new ProjectCacheService(e)),ProjectCacheService.instance}checkMetaInfo(){const e=(0,meta_util_js_1.getLastHvigorVersion)();e!==wrapper_const_js_1.CUR_HVIGOR_VERSION&&(logger.debug(`Since current hvigor version ${wrapper_const_js_1.CUR_HVIGOR_VERSION} differs from last hvigor version \n      ${e}, delete file-cache.json and task-cache.json.`),fs_1.default.existsSync(this.projectTaskSnapShotCacheFilePath)&&fs_1.default.rmSync(this.projectTaskSnapShotCacheFilePath),fs_1.default.existsSync(this.projectFileSnapShotCacheFilePath)&&fs_1.default.rmSync(this.projectFileSnapShotCacheFilePath))}}exports.ProjectCacheService=ProjectCacheService;