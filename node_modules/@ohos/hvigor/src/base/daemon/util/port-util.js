"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.tryUsePort=void 0;const net_1=__importDefault(require("net")),daemon_const_js_1=require("../const/daemon-const.js"),hvigor_daemon_log_js_1=require("../log/hvigor-daemon-log.js"),daemon_server_registry_js_1=require("../registry/daemon-server-registry.js"),log=hvigor_daemon_log_js_1.HvigorDaemonLogger.getLogger("daemon");function isPortInUsed(e){return new Promise((r=>{const o=net_1.default.createServer().listen(e,daemon_const_js_1.DAEMON_SERVER_LOCAL_HOST);o.on("listening",(function(){o.close(),r(e)})),o.on("error",(function(e){r(e)}))}))}async function tryUsePort(e){const r=daemon_server_registry_js_1.defaultDaemonServerRegistry.getAllPortInUsed();for(;r.includes(e);)if(log.debug(`${e} is occupied by hvigor daemon.`),++e>daemon_const_js_1.DAEMON_SERVER_MAX_LISTEN_PORT)return-1;return await isPortInUsed(e)instanceof Error?(log.debug(`${e} is occupied by other process.`),++e>daemon_const_js_1.DAEMON_SERVER_MAX_LISTEN_PORT?-1:tryUsePort(e)):e}exports.tryUsePort=tryUsePort;