"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DaemonCacheService=void 0;const fs_extra_1=__importDefault(require("fs-extra")),file_lock_js_1=require("../../util/file-lock.js"),daemon_const_js_1=require("../const/daemon-const.js"),process_info_util_js_1=require("../util/process-info-util.js"),daemon_info_js_1=require("./daemon-info.js"),DEFAULT_LOCK_OPTION={retries:100,update:1e3};class DaemonCacheService{constructor(e,t){this.cachePath=e,fs_extra_1.default.existsSync(e)||(fs_extra_1.default.ensureFileSync(e),fs_extra_1.default.writeJsonSync(e,{})),this._log=t}set(e,t){(0,file_lock_js_1.lockSync)(this.cachePath,DEFAULT_LOCK_OPTION);const s=this.getAll();s[e]={...t,lastUsedTime:Date.now()},fs_extra_1.default.writeJsonSync(this.cachePath,s),(0,file_lock_js_1.unlockSync)(this.cachePath)}close(){}get(e){return this.getAll()[e]||{}}remove(e){(0,file_lock_js_1.lockSync)(this.cachePath,DEFAULT_LOCK_OPTION);const t=this.getAll();delete t[e],fs_extra_1.default.writeJsonSync(this.cachePath,t),(0,file_lock_js_1.unlockSync)(this.cachePath)}size(){return Object.entries(fs_extra_1.default.readJsonSync(this.cachePath)).length}initialize(){}getAll(){try{const e=fs_extra_1.default.readJsonSync(this.cachePath);return Object.entries(e).length>daemon_const_js_1.DAEMON_INFO_IN_REGISTRY_MAX_LIMIT&&(this._log.debug("Daemon info over limit. Clean daemon info registry."),Object.entries(e).forEach((([t,s])=>{s.state!==daemon_info_js_1.DaemonState.BROKEN&&s.state!==daemon_info_js_1.DaemonState.STOPPED||this.removeUselessInfoInDaemonRegistry(s,e,t)}))),e}catch(e){return this._log.debug(e),this._log.debug("The registry information is abnormal, the daemon information will be cleared."),fs_extra_1.default.removeSync(this.cachePath),fs_extra_1.default.writeJsonSync(this.cachePath,{}),{}}}removeUselessInfoInDaemonRegistry(e,t,s){const o=e.pid;(0,process_info_util_js_1.isHvigorDaemonProcess)(o)?process.kill(o,"SIGKILL"):this._log.debug(`Client check process is not a hvigor daemon or not exist. daemonPid=${o}`),this._log.debug(`Remove daemon info. The information in the registry has exceeded the limit.removedDaemonInfo=${e}`),delete t[s]}}exports.DaemonCacheService=DaemonCacheService;