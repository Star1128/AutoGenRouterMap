"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.masterProcessBoot=void 0;const cluster_1=__importDefault(require("cluster")),log4js_1=require("log4js"),hvigor_log_js_1=require("../../log/hvigor-log.js"),hvigor_daemon_log_js_1=require("../log/hvigor-daemon-log.js"),daemon_process_lifecycle_js_1=require("../process/daemon-process-lifecycle.js"),daemon_server_lifecycle_js_1=require("../server/daemon-server-lifecycle.js"),daemon_server_listener_registry_js_1=require("../server/daemon-server-listener-registry.js"),hvigor_daemon_server_js_1=require("../server/hvigor-daemon-server.js"),session_id_js_1=require("../session/session-id.js"),cacl_exec_argv_util_js_1=require("../../../common/util/cacl-exec-argv-util.js"),process_1=__importDefault(require("process")),_log=hvigor_daemon_log_js_1.HvigorDaemonLogger.getLogger("daemon");function masterProcessBoot(){var e;if(cluster_1.default.isMaster){const r=null!==(e=process_1.default.env._logLevel)&&void 0!==e?e:log4js_1.levels.INFO;(0,hvigor_daemon_log_js_1.configureDaemon)();const s=log4js_1.levels.getLevel(r);void 0!==s&&(0,hvigor_log_js_1.evaluateLogLevel)(s,["daemon"]),_log.debug(`hvigor daemon: Set daemon process log level, logLevel=${r}`),process_1.default.env._sessionId||_log.errorMessageExit("hvigor daemon: Session id cannot be empty. Daemon process will exit.");const o=session_id_js_1.SessionIdHelper.decryptPwdByDefaultMaterial(process_1.default.env._sessionId,_log);initCluster(_log);const t=hvigor_daemon_server_js_1.HvigorDaemonServer.getInstance(o);(0,daemon_process_lifecycle_js_1.registryProcessListener)(t);const i=new daemon_server_lifecycle_js_1.DaemonServerLifecycle;(new daemon_server_listener_registry_js_1.DaemonServerListenerRegistry).registryAllListener(t),i.startListen(t).then((()=>{(0,daemon_process_lifecycle_js_1.setProcessTimeOutTimer)(t),(0,daemon_process_lifecycle_js_1.setProcessRemovedFromRegistryTimer)(t)}))}}function newWorkerProcess(){(0,cacl_exec_argv_util_js_1.calcChildExecArgv)(),_log.debug(`daemon, use the parent process.execArgv ${process_1.default.execArgv}`);const e=cluster_1.default.fork();e.process.stdout.pipe(process_1.default.stdout),e.process.stderr.pipe(process_1.default.stderr)}function initCluster(e){cluster_1.default.on("setup",(r=>{e.debug("hvigor daemon: worker process fork option:"),e.debug(r)})),cluster_1.default.on("exit",((r,s,o)=>{e.debug(`hvigor daemon: worker ${r.process.pid} died (${o||s}).`),e.debug(`hvigor daemon: worker ${r.process.pid} exited with code ${s} and signal ${o}`),r.exitedAfterDisconnect&&e.debug(`hvigor daemon: worker ${r.process.pid} requested restart proactively.`),cluster_1.default.workers&&0!==Object.keys(cluster_1.default.workers).length||(e.debug("hvigor daemon: no worker alive. Start a new worker process."),newWorkerProcess())})),cluster_1.default.on("online",(r=>{e.debug(`hvigor daemon: worker ${r.process.pid} with worker id ${r.id} is online.`),r.on("disconnect",(()=>{e.debug(`hvigor daemon: worker ${r.process.pid} with worker id ${r.id} is disconnected.`)})),r.on("exit",(s=>{e.debug(`hvigor daemon: worker ${r.process.pid} with worker id ${r.id} exit with code ${s}.`)})),r.on("error",(s=>{e.debug(`hvigor daemon: worker ${r.process.pid} with worker id ${r.id} has an error: ${s}`),s.stack&&e.debug(s.stack)}))})),cluster_1.default.workers&&0!==Object.keys(cluster_1.default.workers).length||(cluster_1.default.setupMaster({windowsHide:!0,silent:!0}),newWorkerProcess())}exports.masterProcessBoot=masterProcessBoot;