"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var c=Object.getOwnPropertyDescriptor(t,n);c&&!("get"in c?!t.__esModule:c.writable||c.configurable)||(c={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,c)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkSync=exports.unlockSync=exports.lockSync=void 0;const fse=__importStar(require("fs-extra")),lockInfos=new Map;function lockSync(e,t){const n=normalizeOption(t);let o=0;for(;o<=n.retries;)if(!checkSync(e)){try{getLockSync(e,n);break}catch(e){}o++}if(o>=n.retries)throw new Error(`The registration information of the daemon cannot be obtained. Delete ${e}.lock and try again`);updateLock(e,n)}function getLockSync(e,t){const n=`${e}.lock`;try{fse.mkdirSync(n)}catch(o){if("EEXIST"!==o.code)throw o;try{if(!isLockStale(fse.statSync(n),t))throw new Error(`Lock file ${n} has been held by other process.`);fse.removeSync(n),lockSync(e,t)}catch(n){if("EONENT"!==n.code)throw n;lockSync(e,t)}}const o=new Date(Date.now()+5);try{fse.utimesSync(n,o,o)}catch(e){throw fse.removeSync(n),e}lockInfos.set(e,{mtime:o.getTime(),lastUpdate:Date.now(),option:t,lockPath:n,release:!1})}function updateLock(e,t){var n;const o=`${e}.lock`,c=lockInfos.get(e),r=()=>{clearInterval(null==c?void 0:c.updateTimer),lockInfos.delete(e),fse.removeSync(o)};void 0!==c&&(c.updateTimer=setInterval((()=>{if(c.release)clearInterval(c.updateTimer),fse.removeSync(o);else{let e=c.lastUpdate+t.stale<Date.now();const n=new Date(Date.now());try{if(c.mtime!==fse.statSync(o).mtime.getTime()||void 0===c.mtime)return void r()}catch(t){("ENOENT"===t.code||e)&&r()}try{fse.utimesSync(o,n,n)}catch(n){e=c.lastUpdate+t.stale<Date.now(),("ENOENT"===n.code||e)&&r()}c.mtime=n.getTime(),c.lastUpdate=Date.now()}}),t.update),null===(n=c.updateTimer)||void 0===n||n.unref())}function unlockSync(e){const t=`${e}.lock`,n=lockInfos.get(e);n&&(lockInfos.delete(e),n.release=!0,clearInterval(n.updateTimer),fse.removeSync(t))}function checkSync(e,t){const n=`${e}.lock`,o=normalizeOption(t);if(fse.existsSync(n))try{return!isLockStale(fse.statSync(n),o)}catch(e){if("ENOENT"===e.code)return!1;throw e}return!1}function normalizeOption(e){const t={stale:1e4,retries:0,update:5e3,...e};return t.stale=Math.max(t.stale||2e3),t.update=Math.max(t.update,t.stale/2),t}function isLockStale(e,t){return e.mtime.getTime()+t.stale<Date.now()}exports.lockSync=lockSync,exports.unlockSync=unlockSync,exports.checkSync=checkSync;